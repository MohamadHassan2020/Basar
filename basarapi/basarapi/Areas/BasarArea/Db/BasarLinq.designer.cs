#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace basarapi.Areas.BasarArea.Db
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using BasarDalProj.BasarDb;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Basar")]
	public partial class BasarLinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPlanConfigModel(PlanConfigModel instance);
    partial void UpdatePlanConfigModel(PlanConfigModel instance);
    partial void DeletePlanConfigModel(PlanConfigModel instance);
    partial void InsertCampModel(CampModel instance);
    partial void UpdateCampModel(CampModel instance);
    partial void DeleteCampModel(CampModel instance);
    partial void InsertCountryModel(CountryModel instance);
    partial void UpdateCountryModel(CountryModel instance);
    partial void DeleteCountryModel(CountryModel instance);
    partial void InsertSponsorModel(SponsorModel instance);
    partial void UpdateSponsorModel(SponsorModel instance);
    partial void DeleteSponsorModel(SponsorModel instance);
    partial void InsertTourModel(TourModel instance);
    partial void UpdateTourModel(TourModel instance);
    partial void DeleteTourModel(TourModel instance);
    partial void InsertYearModel(YearModel instance);
    partial void UpdateYearModel(YearModel instance);
    partial void DeleteYearModel(YearModel instance);
    partial void InsertTeamModel(TeamModel instance);
    partial void UpdateTeamModel(TeamModel instance);
    partial void DeleteTeamModel(TeamModel instance);
    partial void InsertCampStatusModel(CampStatusModel instance);
    partial void UpdateCampStatusModel(CampStatusModel instance);
    partial void DeleteCampStatusModel(CampStatusModel instance);
    partial void InsertCampStatsSummaryModel(CampStatsSummaryModel instance);
    partial void UpdateCampStatsSummaryModel(CampStatsSummaryModel instance);
    partial void DeleteCampStatsSummaryModel(CampStatsSummaryModel instance);
    partial void InsertFollowUpStatusModel(FollowUpStatusModel instance);
    partial void UpdateFollowUpStatusModel(FollowUpStatusModel instance);
    partial void DeleteFollowUpStatusModel(FollowUpStatusModel instance);
    partial void InsertCampFollowUpDrugModel(CampFollowUpDrugModel instance);
    partial void UpdateCampFollowUpDrugModel(CampFollowUpDrugModel instance);
    partial void DeleteCampFollowUpDrugModel(CampFollowUpDrugModel instance);
    partial void InsertRoleExtendModel(RoleExtendModel instance);
    partial void UpdateRoleExtendModel(RoleExtendModel instance);
    partial void DeleteRoleExtendModel(RoleExtendModel instance);
    partial void InsertRoleGroupModel(RoleGroupModel instance);
    partial void UpdateRoleGroupModel(RoleGroupModel instance);
    partial void DeleteRoleGroupModel(RoleGroupModel instance);
    partial void InsertRoleDividerModel(RoleDividerModel instance);
    partial void UpdateRoleDividerModel(RoleDividerModel instance);
    partial void DeleteRoleDividerModel(RoleDividerModel instance);
    partial void InsertRoleClassDividerModel(RoleClassDividerModel instance);
    partial void UpdateRoleClassDividerModel(RoleClassDividerModel instance);
    partial void DeleteRoleClassDividerModel(RoleClassDividerModel instance);
    partial void InsertRoleGroupDividerModel(RoleGroupDividerModel instance);
    partial void UpdateRoleGroupDividerModel(RoleGroupDividerModel instance);
    partial void DeleteRoleGroupDividerModel(RoleGroupDividerModel instance);
    partial void InsertAttachmentModel(AttachmentModel instance);
    partial void UpdateAttachmentModel(AttachmentModel instance);
    partial void DeleteAttachmentModel(AttachmentModel instance);
    partial void InsertUserGroupModel(UserGroupModel instance);
    partial void UpdateUserGroupModel(UserGroupModel instance);
    partial void DeleteUserGroupModel(UserGroupModel instance);
    partial void InsertAspNetUserRoleModel(AspNetUserRoleModel instance);
    partial void UpdateAspNetUserRoleModel(AspNetUserRoleModel instance);
    partial void DeleteAspNetUserRoleModel(AspNetUserRoleModel instance);
    partial void InsertAttachmentCampFollowUpDrugModel(AttachmentCampFollowUpDrugModel instance);
    partial void UpdateAttachmentCampFollowUpDrugModel(AttachmentCampFollowUpDrugModel instance);
    partial void DeleteAttachmentCampFollowUpDrugModel(AttachmentCampFollowUpDrugModel instance);
    partial void InsertSponsorShipModel(SponsorShipModel instance);
    partial void UpdateSponsorShipModel(SponsorShipModel instance);
    partial void DeleteSponsorShipModel(SponsorShipModel instance);
    partial void InsertCampFollowUpFinancialModel(CampFollowUpFinancialModel instance);
    partial void UpdateCampFollowUpFinancialModel(CampFollowUpFinancialModel instance);
    partial void DeleteCampFollowUpFinancialModel(CampFollowUpFinancialModel instance);
    partial void InsertAttachmentCampFollowUpFinancialModel(AttachmentCampFollowUpFinancialModel instance);
    partial void UpdateAttachmentCampFollowUpFinancialModel(AttachmentCampFollowUpFinancialModel instance);
    partial void DeleteAttachmentCampFollowUpFinancialModel(AttachmentCampFollowUpFinancialModel instance);
    partial void InsertCampFollowUpAdministrativeModel(CampFollowUpAdministrativeModel instance);
    partial void UpdateCampFollowUpAdministrativeModel(CampFollowUpAdministrativeModel instance);
    partial void DeleteCampFollowUpAdministrativeModel(CampFollowUpAdministrativeModel instance);
    partial void InsertAttachmentCampFollowUpAdministrativeModel(AttachmentCampFollowUpAdministrativeModel instance);
    partial void UpdateAttachmentCampFollowUpAdministrativeModel(AttachmentCampFollowUpAdministrativeModel instance);
    partial void DeleteAttachmentCampFollowUpAdministrativeModel(AttachmentCampFollowUpAdministrativeModel instance);
    partial void InsertAttachmentCampFollowUpMediaModel(AttachmentCampFollowUpMediaModel instance);
    partial void UpdateAttachmentCampFollowUpMediaModel(AttachmentCampFollowUpMediaModel instance);
    partial void DeleteAttachmentCampFollowUpMediaModel(AttachmentCampFollowUpMediaModel instance);
    partial void InsertCampFollowUpMediaModel(CampFollowUpMediaModel instance);
    partial void UpdateCampFollowUpMediaModel(CampFollowUpMediaModel instance);
    partial void DeleteCampFollowUpMediaModel(CampFollowUpMediaModel instance);
    partial void InsertPlanConfigSponsorShipModel(PlanConfigSponsorShipModel instance);
    partial void UpdatePlanConfigSponsorShipModel(PlanConfigSponsorShipModel instance);
    partial void DeletePlanConfigSponsorShipModel(PlanConfigSponsorShipModel instance);
    #endregion
		
		public BasarLinqDataContext() : 
				base(BasarProjOperation.DbConn, mappingSource)
		{
			OnCreated();
		}
		
		public BasarLinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BasarLinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BasarLinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BasarLinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PlanConfigModel> PlanConfigModels
		{
			get
			{
				return this.GetTable<PlanConfigModel>();
			}
		}
		
		public System.Data.Linq.Table<CampModel> CampModels
		{
			get
			{
				return this.GetTable<CampModel>();
			}
		}
		
		public System.Data.Linq.Table<CountryModel> CountryModels
		{
			get
			{
				return this.GetTable<CountryModel>();
			}
		}
		
		public System.Data.Linq.Table<SponsorModel> SponsorModels
		{
			get
			{
				return this.GetTable<SponsorModel>();
			}
		}
		
		public System.Data.Linq.Table<TourModel> TourModels
		{
			get
			{
				return this.GetTable<TourModel>();
			}
		}
		
		public System.Data.Linq.Table<YearModel> YearModels
		{
			get
			{
				return this.GetTable<YearModel>();
			}
		}
		
		public System.Data.Linq.Table<TeamModel> TeamModels
		{
			get
			{
				return this.GetTable<TeamModel>();
			}
		}
		
		public System.Data.Linq.Table<CampStatusModel> CampStatusModels
		{
			get
			{
				return this.GetTable<CampStatusModel>();
			}
		}
		
		public System.Data.Linq.Table<CampStatsSummaryModel> CampStatsSummaryModels
		{
			get
			{
				return this.GetTable<CampStatsSummaryModel>();
			}
		}
		
		public System.Data.Linq.Table<FollowUpStatusModel> FollowUpStatusModels
		{
			get
			{
				return this.GetTable<FollowUpStatusModel>();
			}
		}
		
		public System.Data.Linq.Table<CampFollowUpDrugModel> CampFollowUpDrugModels
		{
			get
			{
				return this.GetTable<CampFollowUpDrugModel>();
			}
		}
		
		public System.Data.Linq.Table<RoleExtendModel> RoleExtendModels
		{
			get
			{
				return this.GetTable<RoleExtendModel>();
			}
		}
		
		public System.Data.Linq.Table<RoleGroupModel> RoleGroupModels
		{
			get
			{
				return this.GetTable<RoleGroupModel>();
			}
		}
		
		public System.Data.Linq.Table<RoleDividerModel> RoleDividerModels
		{
			get
			{
				return this.GetTable<RoleDividerModel>();
			}
		}
		
		public System.Data.Linq.Table<RoleClassDividerModel> RoleClassDividerModels
		{
			get
			{
				return this.GetTable<RoleClassDividerModel>();
			}
		}
		
		public System.Data.Linq.Table<RoleGroupDividerModel> RoleGroupDividerModels
		{
			get
			{
				return this.GetTable<RoleGroupDividerModel>();
			}
		}
		
		public System.Data.Linq.Table<AttachmentModel> AttachmentModels
		{
			get
			{
				return this.GetTable<AttachmentModel>();
			}
		}
		
		public System.Data.Linq.Table<vwGetRoleGroupDividerModel> vwGetRoleGroupDividerModels
		{
			get
			{
				return this.GetTable<vwGetRoleGroupDividerModel>();
			}
		}
		
		public System.Data.Linq.Table<UserGroupModel> UserGroupModels
		{
			get
			{
				return this.GetTable<UserGroupModel>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRoleModel> AspNetUserRoleModels
		{
			get
			{
				return this.GetTable<AspNetUserRoleModel>();
			}
		}
		
		public System.Data.Linq.Table<vwGetCampFollowUpDrugsWithAttachmentModel> vwGetCampFollowUpDrugsWithAttachmentModels
		{
			get
			{
				return this.GetTable<vwGetCampFollowUpDrugsWithAttachmentModel>();
			}
		}
		
		public System.Data.Linq.Table<AttachmentCampFollowUpDrugModel> AttachmentCampFollowUpDrugModels
		{
			get
			{
				return this.GetTable<AttachmentCampFollowUpDrugModel>();
			}
		}
		
		public System.Data.Linq.Table<SponsorShipModel> SponsorShipModels
		{
			get
			{
				return this.GetTable<SponsorShipModel>();
			}
		}
		
		public System.Data.Linq.Table<CampFollowUpFinancialModel> CampFollowUpFinancialModels
		{
			get
			{
				return this.GetTable<CampFollowUpFinancialModel>();
			}
		}
		
		public System.Data.Linq.Table<AttachmentCampFollowUpFinancialModel> AttachmentCampFollowUpFinancialModels
		{
			get
			{
				return this.GetTable<AttachmentCampFollowUpFinancialModel>();
			}
		}
		
		public System.Data.Linq.Table<vwGetCampFollowUpFinancialWithAttachmentModel> vwGetCampFollowUpFinancialWithAttachmentModels
		{
			get
			{
				return this.GetTable<vwGetCampFollowUpFinancialWithAttachmentModel>();
			}
		}
		
		public System.Data.Linq.Table<CampFollowUpAdministrativeModel> CampFollowUpAdministrativeModels
		{
			get
			{
				return this.GetTable<CampFollowUpAdministrativeModel>();
			}
		}
		
		public System.Data.Linq.Table<AttachmentCampFollowUpAdministrativeModel> AttachmentCampFollowUpAdministrativeModels
		{
			get
			{
				return this.GetTable<AttachmentCampFollowUpAdministrativeModel>();
			}
		}
		
		public System.Data.Linq.Table<vwGetCampFollowUpAdministrativeWithAttachmentModel> vwGetCampFollowUpAdministrativeWithAttachmentModels
		{
			get
			{
				return this.GetTable<vwGetCampFollowUpAdministrativeWithAttachmentModel>();
			}
		}
		
		public System.Data.Linq.Table<AttachmentCampFollowUpMediaModel> AttachmentCampFollowUpMediaModels
		{
			get
			{
				return this.GetTable<AttachmentCampFollowUpMediaModel>();
			}
		}
		
		public System.Data.Linq.Table<CampFollowUpMediaModel> CampFollowUpMediaModels
		{
			get
			{
				return this.GetTable<CampFollowUpMediaModel>();
			}
		}
		
		public System.Data.Linq.Table<vwGetCampFollowUpMediaWithAttachmentModel> vwGetCampFollowUpMediaWithAttachmentModels
		{
			get
			{
				return this.GetTable<vwGetCampFollowUpMediaWithAttachmentModel>();
			}
		}
		
		public System.Data.Linq.Table<PlanConfigSponsorShipModel> PlanConfigSponsorShipModels
		{
			get
			{
				return this.GetTable<PlanConfigSponsorShipModel>();
			}
		}
		
		public System.Data.Linq.Table<vwGetPlanConfigSponsorShipLastModel> vwGetPlanConfigSponsorShipLastModels
		{
			get
			{
				return this.GetTable<vwGetPlanConfigSponsorShipLastModel>();
			}
		}
		
		public System.Data.Linq.Table<xzx> xzxes
		{
			get
			{
				return this.GetTable<xzx>();
			}
		}
		
		public System.Data.Linq.Table<vwGetAxisModel> vwGetAxisModels
		{
			get
			{
				return this.GetTable<vwGetAxisModel>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlanConfig")]
	public partial class PlanConfigModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanConfigId;
		
		private string _PlanConfigIdNumber;
		
		private System.Nullable<int> _PlanConfigOrder;
		
		private System.Nullable<short> _PlanConfigYear;
		
		private System.Nullable<short> _TourId;
		
		private System.Nullable<short> _TeamId;
		
		private System.Nullable<byte> _CountryId;
		
		private System.Nullable<short> _CampId;
		
		private System.Nullable<short> _SponsorId;
		
		private System.Nullable<System.DateTime> _PlanConfigStartDate;
		
		private System.Nullable<System.DateTime> _PlanConfigEndDate;
		
		private string _PlanConfigAddBy;
		
		private string _PlanConfigUpdatedBy;
		
		private System.Nullable<System.DateTime> _PlanConfigDateIn;
		
		private System.Nullable<System.DateTime> _PlanConfigUpdatedDate;
		
		private System.Nullable<bool> _PlanConfigStatus;
		
		private string _PlanConfigRemark;
		
		private System.Nullable<bool> _PreliminaryStatus;
		
		private System.Nullable<short> _CampStatusId;
		
		private System.Nullable<bool> _PlanConfigIsClosed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnPlanConfigIdNumberChanging(string value);
    partial void OnPlanConfigIdNumberChanged();
    partial void OnPlanConfigOrderChanging(System.Nullable<int> value);
    partial void OnPlanConfigOrderChanged();
    partial void OnPlanConfigYearChanging(System.Nullable<short> value);
    partial void OnPlanConfigYearChanged();
    partial void OnTourIdChanging(System.Nullable<short> value);
    partial void OnTourIdChanged();
    partial void OnTeamIdChanging(System.Nullable<short> value);
    partial void OnTeamIdChanged();
    partial void OnCountryIdChanging(System.Nullable<byte> value);
    partial void OnCountryIdChanged();
    partial void OnCampIdChanging(System.Nullable<short> value);
    partial void OnCampIdChanged();
    partial void OnSponsorIdChanging(System.Nullable<short> value);
    partial void OnSponsorIdChanged();
    partial void OnPlanConfigStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanConfigStartDateChanged();
    partial void OnPlanConfigEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanConfigEndDateChanged();
    partial void OnPlanConfigAddByChanging(string value);
    partial void OnPlanConfigAddByChanged();
    partial void OnPlanConfigUpdatedByChanging(string value);
    partial void OnPlanConfigUpdatedByChanged();
    partial void OnPlanConfigDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanConfigDateInChanged();
    partial void OnPlanConfigUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanConfigUpdatedDateChanged();
    partial void OnPlanConfigStatusChanging(System.Nullable<bool> value);
    partial void OnPlanConfigStatusChanged();
    partial void OnPlanConfigRemarkChanging(string value);
    partial void OnPlanConfigRemarkChanged();
    partial void OnPreliminaryStatusChanging(System.Nullable<bool> value);
    partial void OnPreliminaryStatusChanged();
    partial void OnCampStatusIdChanging(System.Nullable<short> value);
    partial void OnCampStatusIdChanged();
    partial void OnPlanConfigIsClosedChanging(System.Nullable<bool> value);
    partial void OnPlanConfigIsClosedChanged();
    #endregion
		
		public PlanConfigModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigIdNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PlanConfigIdNumber
		{
			get
			{
				return this._PlanConfigIdNumber;
			}
			set
			{
				if ((this._PlanConfigIdNumber != value))
				{
					this.OnPlanConfigIdNumberChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigIdNumber = value;
					this.SendPropertyChanged("PlanConfigIdNumber");
					this.OnPlanConfigIdNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigOrder", DbType="Int")]
		public System.Nullable<int> PlanConfigOrder
		{
			get
			{
				return this._PlanConfigOrder;
			}
			set
			{
				if ((this._PlanConfigOrder != value))
				{
					this.OnPlanConfigOrderChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigOrder = value;
					this.SendPropertyChanged("PlanConfigOrder");
					this.OnPlanConfigOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt")]
		public System.Nullable<short> PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this.OnPlanConfigYearChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigYear = value;
					this.SendPropertyChanged("PlanConfigYear");
					this.OnPlanConfigYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt")]
		public System.Nullable<short> TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt")]
		public System.Nullable<short> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt")]
		public System.Nullable<short> CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt")]
		public System.Nullable<short> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigStartDate", DbType="Date")]
		public System.Nullable<System.DateTime> PlanConfigStartDate
		{
			get
			{
				return this._PlanConfigStartDate;
			}
			set
			{
				if ((this._PlanConfigStartDate != value))
				{
					this.OnPlanConfigStartDateChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigStartDate = value;
					this.SendPropertyChanged("PlanConfigStartDate");
					this.OnPlanConfigStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigEndDate", DbType="Date")]
		public System.Nullable<System.DateTime> PlanConfigEndDate
		{
			get
			{
				return this._PlanConfigEndDate;
			}
			set
			{
				if ((this._PlanConfigEndDate != value))
				{
					this.OnPlanConfigEndDateChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigEndDate = value;
					this.SendPropertyChanged("PlanConfigEndDate");
					this.OnPlanConfigEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigAddBy", DbType="NVarChar(128)")]
		public string PlanConfigAddBy
		{
			get
			{
				return this._PlanConfigAddBy;
			}
			set
			{
				if ((this._PlanConfigAddBy != value))
				{
					this.OnPlanConfigAddByChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigAddBy = value;
					this.SendPropertyChanged("PlanConfigAddBy");
					this.OnPlanConfigAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigUpdatedBy", DbType="NVarChar(128)")]
		public string PlanConfigUpdatedBy
		{
			get
			{
				return this._PlanConfigUpdatedBy;
			}
			set
			{
				if ((this._PlanConfigUpdatedBy != value))
				{
					this.OnPlanConfigUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigUpdatedBy = value;
					this.SendPropertyChanged("PlanConfigUpdatedBy");
					this.OnPlanConfigUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PlanConfigDateIn
		{
			get
			{
				return this._PlanConfigDateIn;
			}
			set
			{
				if ((this._PlanConfigDateIn != value))
				{
					this.OnPlanConfigDateInChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigDateIn = value;
					this.SendPropertyChanged("PlanConfigDateIn");
					this.OnPlanConfigDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigUpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PlanConfigUpdatedDate
		{
			get
			{
				return this._PlanConfigUpdatedDate;
			}
			set
			{
				if ((this._PlanConfigUpdatedDate != value))
				{
					this.OnPlanConfigUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigUpdatedDate = value;
					this.SendPropertyChanged("PlanConfigUpdatedDate");
					this.OnPlanConfigUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigStatus", DbType="Bit")]
		public System.Nullable<bool> PlanConfigStatus
		{
			get
			{
				return this._PlanConfigStatus;
			}
			set
			{
				if ((this._PlanConfigStatus != value))
				{
					this.OnPlanConfigStatusChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigStatus = value;
					this.SendPropertyChanged("PlanConfigStatus");
					this.OnPlanConfigStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigRemark", DbType="NVarChar(200)")]
		public string PlanConfigRemark
		{
			get
			{
				return this._PlanConfigRemark;
			}
			set
			{
				if ((this._PlanConfigRemark != value))
				{
					this.OnPlanConfigRemarkChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigRemark = value;
					this.SendPropertyChanged("PlanConfigRemark");
					this.OnPlanConfigRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreliminaryStatus", DbType="Bit")]
		public System.Nullable<bool> PreliminaryStatus
		{
			get
			{
				return this._PreliminaryStatus;
			}
			set
			{
				if ((this._PreliminaryStatus != value))
				{
					this.OnPreliminaryStatusChanging(value);
					this.SendPropertyChanging();
					this._PreliminaryStatus = value;
					this.SendPropertyChanged("PreliminaryStatus");
					this.OnPreliminaryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt")]
		public System.Nullable<short> CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigIsClosed", DbType="Bit")]
		public System.Nullable<bool> PlanConfigIsClosed
		{
			get
			{
				return this._PlanConfigIsClosed;
			}
			set
			{
				if ((this._PlanConfigIsClosed != value))
				{
					this.OnPlanConfigIsClosedChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigIsClosed = value;
					this.SendPropertyChanged("PlanConfigIsClosed");
					this.OnPlanConfigIsClosedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCamps")]
	public partial class CampModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CampId;
		
		private System.Nullable<byte> _CountryId;
		
		private string _CampDsecAr;
		
		private string _CampDsecEn;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _CreationBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<short> _CampOrder;
		
		private System.Nullable<bool> _CampStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampIdChanging(short value);
    partial void OnCampIdChanged();
    partial void OnCountryIdChanging(System.Nullable<byte> value);
    partial void OnCountryIdChanged();
    partial void OnCampDsecArChanging(string value);
    partial void OnCampDsecArChanged();
    partial void OnCampDsecEnChanging(string value);
    partial void OnCampDsecEnChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnCreationByChanging(string value);
    partial void OnCreationByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCampOrderChanging(System.Nullable<short> value);
    partial void OnCampOrderChanged();
    partial void OnCampStatusChanging(System.Nullable<bool> value);
    partial void OnCampStatusChanged();
    #endregion
		
		public CampModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampDsecAr", DbType="NVarChar(50)")]
		public string CampDsecAr
		{
			get
			{
				return this._CampDsecAr;
			}
			set
			{
				if ((this._CampDsecAr != value))
				{
					this.OnCampDsecArChanging(value);
					this.SendPropertyChanging();
					this._CampDsecAr = value;
					this.SendPropertyChanged("CampDsecAr");
					this.OnCampDsecArChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampDsecEn", DbType="NVarChar(50)")]
		public string CampDsecEn
		{
			get
			{
				return this._CampDsecEn;
			}
			set
			{
				if ((this._CampDsecEn != value))
				{
					this.OnCampDsecEnChanging(value);
					this.SendPropertyChanging();
					this._CampDsecEn = value;
					this.SendPropertyChanged("CampDsecEn");
					this.OnCampDsecEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationBy", DbType="NVarChar(128)")]
		public string CreationBy
		{
			get
			{
				return this._CreationBy;
			}
			set
			{
				if ((this._CreationBy != value))
				{
					this.OnCreationByChanging(value);
					this.SendPropertyChanging();
					this._CreationBy = value;
					this.SendPropertyChanged("CreationBy");
					this.OnCreationByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(128)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampOrder", DbType="SmallInt")]
		public System.Nullable<short> CampOrder
		{
			get
			{
				return this._CampOrder;
			}
			set
			{
				if ((this._CampOrder != value))
				{
					this.OnCampOrderChanging(value);
					this.SendPropertyChanging();
					this._CampOrder = value;
					this.SendPropertyChanged("CampOrder");
					this.OnCampOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatus", DbType="Bit")]
		public System.Nullable<bool> CampStatus
		{
			get
			{
				return this._CampStatus;
			}
			set
			{
				if ((this._CampStatus != value))
				{
					this.OnCampStatusChanging(value);
					this.SendPropertyChanging();
					this._CampStatus = value;
					this.SendPropertyChanged("CampStatus");
					this.OnCampStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCountries")]
	public partial class CountryModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _CountryId;
		
		private string _CountryDsecAr;
		
		private string _CountryDsecEn;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _CreationBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<byte> _CountryOrder;
		
		private System.Nullable<bool> _CountryStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIdChanging(byte value);
    partial void OnCountryIdChanged();
    partial void OnCountryDsecArChanging(string value);
    partial void OnCountryDsecArChanged();
    partial void OnCountryDsecEnChanging(string value);
    partial void OnCountryDsecEnChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnCreationByChanging(string value);
    partial void OnCreationByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCountryOrderChanging(System.Nullable<byte> value);
    partial void OnCountryOrderChanged();
    partial void OnCountryStatusChanging(System.Nullable<bool> value);
    partial void OnCountryStatusChanged();
    #endregion
		
		public CountryModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryDsecAr", DbType="NVarChar(50)")]
		public string CountryDsecAr
		{
			get
			{
				return this._CountryDsecAr;
			}
			set
			{
				if ((this._CountryDsecAr != value))
				{
					this.OnCountryDsecArChanging(value);
					this.SendPropertyChanging();
					this._CountryDsecAr = value;
					this.SendPropertyChanged("CountryDsecAr");
					this.OnCountryDsecArChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryDsecEn", DbType="NVarChar(50)")]
		public string CountryDsecEn
		{
			get
			{
				return this._CountryDsecEn;
			}
			set
			{
				if ((this._CountryDsecEn != value))
				{
					this.OnCountryDsecEnChanging(value);
					this.SendPropertyChanging();
					this._CountryDsecEn = value;
					this.SendPropertyChanged("CountryDsecEn");
					this.OnCountryDsecEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationBy", DbType="NVarChar(128)")]
		public string CreationBy
		{
			get
			{
				return this._CreationBy;
			}
			set
			{
				if ((this._CreationBy != value))
				{
					this.OnCreationByChanging(value);
					this.SendPropertyChanging();
					this._CreationBy = value;
					this.SendPropertyChanged("CreationBy");
					this.OnCreationByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(128)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryOrder", DbType="TinyInt")]
		public System.Nullable<byte> CountryOrder
		{
			get
			{
				return this._CountryOrder;
			}
			set
			{
				if ((this._CountryOrder != value))
				{
					this.OnCountryOrderChanging(value);
					this.SendPropertyChanging();
					this._CountryOrder = value;
					this.SendPropertyChanged("CountryOrder");
					this.OnCountryOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryStatus", DbType="Bit")]
		public System.Nullable<bool> CountryStatus
		{
			get
			{
				return this._CountryStatus;
			}
			set
			{
				if ((this._CountryStatus != value))
				{
					this.OnCountryStatusChanging(value);
					this.SendPropertyChanging();
					this._CountryStatus = value;
					this.SendPropertyChanged("CountryStatus");
					this.OnCountryStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSponsors")]
	public partial class SponsorModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _SponsorId;
		
		private string _SponsorDsecAr;
		
		private string _SponsorDsecEn;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _CreationBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<short> _SponsorOrder;
		
		private System.Nullable<bool> _SponsorStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSponsorIdChanging(short value);
    partial void OnSponsorIdChanged();
    partial void OnSponsorDsecArChanging(string value);
    partial void OnSponsorDsecArChanged();
    partial void OnSponsorDsecEnChanging(string value);
    partial void OnSponsorDsecEnChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnCreationByChanging(string value);
    partial void OnCreationByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnSponsorOrderChanging(System.Nullable<short> value);
    partial void OnSponsorOrderChanged();
    partial void OnSponsorStatusChanging(System.Nullable<bool> value);
    partial void OnSponsorStatusChanged();
    #endregion
		
		public SponsorModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorDsecAr", DbType="NVarChar(50)")]
		public string SponsorDsecAr
		{
			get
			{
				return this._SponsorDsecAr;
			}
			set
			{
				if ((this._SponsorDsecAr != value))
				{
					this.OnSponsorDsecArChanging(value);
					this.SendPropertyChanging();
					this._SponsorDsecAr = value;
					this.SendPropertyChanged("SponsorDsecAr");
					this.OnSponsorDsecArChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorDsecEn", DbType="NVarChar(50)")]
		public string SponsorDsecEn
		{
			get
			{
				return this._SponsorDsecEn;
			}
			set
			{
				if ((this._SponsorDsecEn != value))
				{
					this.OnSponsorDsecEnChanging(value);
					this.SendPropertyChanging();
					this._SponsorDsecEn = value;
					this.SendPropertyChanged("SponsorDsecEn");
					this.OnSponsorDsecEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationBy", DbType="NVarChar(128)")]
		public string CreationBy
		{
			get
			{
				return this._CreationBy;
			}
			set
			{
				if ((this._CreationBy != value))
				{
					this.OnCreationByChanging(value);
					this.SendPropertyChanging();
					this._CreationBy = value;
					this.SendPropertyChanged("CreationBy");
					this.OnCreationByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(128)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorOrder", DbType="SmallInt")]
		public System.Nullable<short> SponsorOrder
		{
			get
			{
				return this._SponsorOrder;
			}
			set
			{
				if ((this._SponsorOrder != value))
				{
					this.OnSponsorOrderChanging(value);
					this.SendPropertyChanging();
					this._SponsorOrder = value;
					this.SendPropertyChanged("SponsorOrder");
					this.OnSponsorOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorStatus", DbType="Bit")]
		public System.Nullable<bool> SponsorStatus
		{
			get
			{
				return this._SponsorStatus;
			}
			set
			{
				if ((this._SponsorStatus != value))
				{
					this.OnSponsorStatusChanging(value);
					this.SendPropertyChanging();
					this._SponsorStatus = value;
					this.SendPropertyChanged("SponsorStatus");
					this.OnSponsorStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTour")]
	public partial class TourModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _TourId;
		
		private string _TourDsecAr;
		
		private string _TourDsecEn;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _CreationBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<short> _TourOrder;
		
		private System.Nullable<bool> _TourStatus;
		
		private string _TourDescHint;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTourIdChanging(short value);
    partial void OnTourIdChanged();
    partial void OnTourDsecArChanging(string value);
    partial void OnTourDsecArChanged();
    partial void OnTourDsecEnChanging(string value);
    partial void OnTourDsecEnChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnCreationByChanging(string value);
    partial void OnCreationByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnTourOrderChanging(System.Nullable<short> value);
    partial void OnTourOrderChanged();
    partial void OnTourStatusChanging(System.Nullable<bool> value);
    partial void OnTourStatusChanged();
    partial void OnTourDescHintChanging(string value);
    partial void OnTourDescHintChanged();
    #endregion
		
		public TourModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourDsecAr", DbType="NVarChar(50)")]
		public string TourDsecAr
		{
			get
			{
				return this._TourDsecAr;
			}
			set
			{
				if ((this._TourDsecAr != value))
				{
					this.OnTourDsecArChanging(value);
					this.SendPropertyChanging();
					this._TourDsecAr = value;
					this.SendPropertyChanged("TourDsecAr");
					this.OnTourDsecArChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourDsecEn", DbType="NVarChar(50)")]
		public string TourDsecEn
		{
			get
			{
				return this._TourDsecEn;
			}
			set
			{
				if ((this._TourDsecEn != value))
				{
					this.OnTourDsecEnChanging(value);
					this.SendPropertyChanging();
					this._TourDsecEn = value;
					this.SendPropertyChanged("TourDsecEn");
					this.OnTourDsecEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationBy", DbType="NVarChar(128)")]
		public string CreationBy
		{
			get
			{
				return this._CreationBy;
			}
			set
			{
				if ((this._CreationBy != value))
				{
					this.OnCreationByChanging(value);
					this.SendPropertyChanging();
					this._CreationBy = value;
					this.SendPropertyChanged("CreationBy");
					this.OnCreationByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(128)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourOrder", DbType="SmallInt")]
		public System.Nullable<short> TourOrder
		{
			get
			{
				return this._TourOrder;
			}
			set
			{
				if ((this._TourOrder != value))
				{
					this.OnTourOrderChanging(value);
					this.SendPropertyChanging();
					this._TourOrder = value;
					this.SendPropertyChanged("TourOrder");
					this.OnTourOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourStatus", DbType="Bit")]
		public System.Nullable<bool> TourStatus
		{
			get
			{
				return this._TourStatus;
			}
			set
			{
				if ((this._TourStatus != value))
				{
					this.OnTourStatusChanging(value);
					this.SendPropertyChanging();
					this._TourStatus = value;
					this.SendPropertyChanged("TourStatus");
					this.OnTourStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourDescHint", DbType="NVarChar(100)")]
		public string TourDescHint
		{
			get
			{
				return this._TourDescHint;
			}
			set
			{
				if ((this._TourDescHint != value))
				{
					this.OnTourDescHintChanging(value);
					this.SendPropertyChanging();
					this._TourDescHint = value;
					this.SendPropertyChanged("TourDescHint");
					this.OnTourDescHintChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblYears")]
	public partial class YearModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _YearId;
		
		private System.Nullable<short> _YearNameAr;
		
		private System.Nullable<short> _YearNameEn;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<bool> _YearStatus;
		
		private System.Nullable<byte> _YearOrder;
		
		private string _YearDesc;
		
		private string _CreationBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYearIdChanging(byte value);
    partial void OnYearIdChanged();
    partial void OnYearNameArChanging(System.Nullable<short> value);
    partial void OnYearNameArChanged();
    partial void OnYearNameEnChanging(System.Nullable<short> value);
    partial void OnYearNameEnChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnYearStatusChanging(System.Nullable<bool> value);
    partial void OnYearStatusChanged();
    partial void OnYearOrderChanging(System.Nullable<byte> value);
    partial void OnYearOrderChanged();
    partial void OnYearDescChanging(string value);
    partial void OnYearDescChanged();
    partial void OnCreationByChanging(string value);
    partial void OnCreationByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public YearModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearId", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte YearId
		{
			get
			{
				return this._YearId;
			}
			set
			{
				if ((this._YearId != value))
				{
					this.OnYearIdChanging(value);
					this.SendPropertyChanging();
					this._YearId = value;
					this.SendPropertyChanged("YearId");
					this.OnYearIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNameAr", DbType="SmallInt")]
		public System.Nullable<short> YearNameAr
		{
			get
			{
				return this._YearNameAr;
			}
			set
			{
				if ((this._YearNameAr != value))
				{
					this.OnYearNameArChanging(value);
					this.SendPropertyChanging();
					this._YearNameAr = value;
					this.SendPropertyChanged("YearNameAr");
					this.OnYearNameArChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearNameEn", DbType="SmallInt")]
		public System.Nullable<short> YearNameEn
		{
			get
			{
				return this._YearNameEn;
			}
			set
			{
				if ((this._YearNameEn != value))
				{
					this.OnYearNameEnChanging(value);
					this.SendPropertyChanging();
					this._YearNameEn = value;
					this.SendPropertyChanged("YearNameEn");
					this.OnYearNameEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearStatus", DbType="Bit")]
		public System.Nullable<bool> YearStatus
		{
			get
			{
				return this._YearStatus;
			}
			set
			{
				if ((this._YearStatus != value))
				{
					this.OnYearStatusChanging(value);
					this.SendPropertyChanging();
					this._YearStatus = value;
					this.SendPropertyChanged("YearStatus");
					this.OnYearStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearOrder", DbType="TinyInt")]
		public System.Nullable<byte> YearOrder
		{
			get
			{
				return this._YearOrder;
			}
			set
			{
				if ((this._YearOrder != value))
				{
					this.OnYearOrderChanging(value);
					this.SendPropertyChanging();
					this._YearOrder = value;
					this.SendPropertyChanged("YearOrder");
					this.OnYearOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearDesc", DbType="NVarChar(50)")]
		public string YearDesc
		{
			get
			{
				return this._YearDesc;
			}
			set
			{
				if ((this._YearDesc != value))
				{
					this.OnYearDescChanging(value);
					this.SendPropertyChanging();
					this._YearDesc = value;
					this.SendPropertyChanged("YearDesc");
					this.OnYearDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationBy", DbType="NVarChar(128)")]
		public string CreationBy
		{
			get
			{
				return this._CreationBy;
			}
			set
			{
				if ((this._CreationBy != value))
				{
					this.OnCreationByChanging(value);
					this.SendPropertyChanging();
					this._CreationBy = value;
					this.SendPropertyChanged("CreationBy");
					this.OnCreationByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(128)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblTeam")]
	public partial class TeamModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _TeamId;
		
		private string _TeamDsecAr;
		
		private string _TeamDsecEn;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private string _CreationBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<short> _TeamOrder;
		
		private System.Nullable<bool> _TeamStatus;
		
		private string _TeamFlag;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamIdChanging(short value);
    partial void OnTeamIdChanged();
    partial void OnTeamDsecArChanging(string value);
    partial void OnTeamDsecArChanged();
    partial void OnTeamDsecEnChanging(string value);
    partial void OnTeamDsecEnChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnCreationByChanging(string value);
    partial void OnCreationByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnTeamOrderChanging(System.Nullable<short> value);
    partial void OnTeamOrderChanged();
    partial void OnTeamStatusChanging(System.Nullable<bool> value);
    partial void OnTeamStatusChanged();
    partial void OnTeamFlagChanging(string value);
    partial void OnTeamFlagChanged();
    #endregion
		
		public TeamModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamDsecAr", DbType="NVarChar(50)")]
		public string TeamDsecAr
		{
			get
			{
				return this._TeamDsecAr;
			}
			set
			{
				if ((this._TeamDsecAr != value))
				{
					this.OnTeamDsecArChanging(value);
					this.SendPropertyChanging();
					this._TeamDsecAr = value;
					this.SendPropertyChanged("TeamDsecAr");
					this.OnTeamDsecArChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamDsecEn", DbType="NVarChar(50)")]
		public string TeamDsecEn
		{
			get
			{
				return this._TeamDsecEn;
			}
			set
			{
				if ((this._TeamDsecEn != value))
				{
					this.OnTeamDsecEnChanging(value);
					this.SendPropertyChanging();
					this._TeamDsecEn = value;
					this.SendPropertyChanged("TeamDsecEn");
					this.OnTeamDsecEnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationBy", DbType="NVarChar(128)")]
		public string CreationBy
		{
			get
			{
				return this._CreationBy;
			}
			set
			{
				if ((this._CreationBy != value))
				{
					this.OnCreationByChanging(value);
					this.SendPropertyChanging();
					this._CreationBy = value;
					this.SendPropertyChanged("CreationBy");
					this.OnCreationByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(128)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamOrder", DbType="SmallInt")]
		public System.Nullable<short> TeamOrder
		{
			get
			{
				return this._TeamOrder;
			}
			set
			{
				if ((this._TeamOrder != value))
				{
					this.OnTeamOrderChanging(value);
					this.SendPropertyChanging();
					this._TeamOrder = value;
					this.SendPropertyChanged("TeamOrder");
					this.OnTeamOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamStatus", DbType="Bit")]
		public System.Nullable<bool> TeamStatus
		{
			get
			{
				return this._TeamStatus;
			}
			set
			{
				if ((this._TeamStatus != value))
				{
					this.OnTeamStatusChanging(value);
					this.SendPropertyChanging();
					this._TeamStatus = value;
					this.SendPropertyChanged("TeamStatus");
					this.OnTeamStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamFlag", DbType="NVarChar(10)")]
		public string TeamFlag
		{
			get
			{
				return this._TeamFlag;
			}
			set
			{
				if ((this._TeamFlag != value))
				{
					this.OnTeamFlagChanging(value);
					this.SendPropertyChanging();
					this._TeamFlag = value;
					this.SendPropertyChanged("TeamFlag");
					this.OnTeamFlagChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCampStatus")]
	public partial class CampStatusModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CampStatusId;
		
		private string _CampStatusDescAR;
		
		private string _CampStatusDescEN;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<bool> _CampStatusEnabled;
		
		private string _AddBy;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private string _UpdatedBy;
		
		private System.Nullable<short> _CampStatusOrder;
		
		private string _CampStatusImage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampStatusIdChanging(short value);
    partial void OnCampStatusIdChanged();
    partial void OnCampStatusDescARChanging(string value);
    partial void OnCampStatusDescARChanged();
    partial void OnCampStatusDescENChanging(string value);
    partial void OnCampStatusDescENChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnCampStatusEnabledChanging(System.Nullable<bool> value);
    partial void OnCampStatusEnabledChanged();
    partial void OnAddByChanging(string value);
    partial void OnAddByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    partial void OnCampStatusOrderChanging(System.Nullable<short> value);
    partial void OnCampStatusOrderChanged();
    partial void OnCampStatusImageChanging(string value);
    partial void OnCampStatusImageChanged();
    #endregion
		
		public CampStatusModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusDescAR", DbType="NVarChar(50)")]
		public string CampStatusDescAR
		{
			get
			{
				return this._CampStatusDescAR;
			}
			set
			{
				if ((this._CampStatusDescAR != value))
				{
					this.OnCampStatusDescARChanging(value);
					this.SendPropertyChanging();
					this._CampStatusDescAR = value;
					this.SendPropertyChanged("CampStatusDescAR");
					this.OnCampStatusDescARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusDescEN", DbType="NVarChar(50)")]
		public string CampStatusDescEN
		{
			get
			{
				return this._CampStatusDescEN;
			}
			set
			{
				if ((this._CampStatusDescEN != value))
				{
					this.OnCampStatusDescENChanging(value);
					this.SendPropertyChanging();
					this._CampStatusDescEN = value;
					this.SendPropertyChanged("CampStatusDescEN");
					this.OnCampStatusDescENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusEnabled", DbType="Bit")]
		public System.Nullable<bool> CampStatusEnabled
		{
			get
			{
				return this._CampStatusEnabled;
			}
			set
			{
				if ((this._CampStatusEnabled != value))
				{
					this.OnCampStatusEnabledChanging(value);
					this.SendPropertyChanging();
					this._CampStatusEnabled = value;
					this.SendPropertyChanged("CampStatusEnabled");
					this.OnCampStatusEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddBy", DbType="NVarChar(128)")]
		public string AddBy
		{
			get
			{
				return this._AddBy;
			}
			set
			{
				if ((this._AddBy != value))
				{
					this.OnAddByChanging(value);
					this.SendPropertyChanging();
					this._AddBy = value;
					this.SendPropertyChanged("AddBy");
					this.OnAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(128)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusOrder", DbType="SmallInt")]
		public System.Nullable<short> CampStatusOrder
		{
			get
			{
				return this._CampStatusOrder;
			}
			set
			{
				if ((this._CampStatusOrder != value))
				{
					this.OnCampStatusOrderChanging(value);
					this.SendPropertyChanging();
					this._CampStatusOrder = value;
					this.SendPropertyChanged("CampStatusOrder");
					this.OnCampStatusOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusImage", DbType="NVarChar(20)")]
		public string CampStatusImage
		{
			get
			{
				return this._CampStatusImage;
			}
			set
			{
				if ((this._CampStatusImage != value))
				{
					this.OnCampStatusImageChanging(value);
					this.SendPropertyChanging();
					this._CampStatusImage = value;
					this.SendPropertyChanged("CampStatusImage");
					this.OnCampStatusImageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCampStatsSummary")]
	public partial class CampStatsSummaryModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanConfigId;
		
		private System.Nullable<short> _PlanConfigYear;
		
		private System.Nullable<short> _TourId;
		
		private System.Nullable<short> _TeamId;
		
		private System.Nullable<byte> _CountryId;
		
		private System.Nullable<short> _CampId;
		
		private System.Nullable<short> _SponsorId;
		
		private System.Nullable<short> _CampStatusId;
		
		private System.Nullable<int> _OPDCount;
		
		private System.Nullable<int> _ORCount;
		
		private System.Nullable<int> _GlassesCount;
		
		private string _CampStatsSummaryNote;
		
		private System.Nullable<System.DateTime> _CampStatsSummaryDateIn;
		
		private string _CampStatsSummaryAddBy;
		
		private System.Nullable<System.DateTime> _CampStatsSummaryUpdatedDate;
		
		private string _CampStatsSummaryUpdatedBy;
		
		private System.Nullable<bool> _CampStatsSummaryStatus;
		
		private System.Nullable<bool> _CampStatsSummaryIsClosed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnPlanConfigYearChanging(System.Nullable<short> value);
    partial void OnPlanConfigYearChanged();
    partial void OnTourIdChanging(System.Nullable<short> value);
    partial void OnTourIdChanged();
    partial void OnTeamIdChanging(System.Nullable<short> value);
    partial void OnTeamIdChanged();
    partial void OnCountryIdChanging(System.Nullable<byte> value);
    partial void OnCountryIdChanged();
    partial void OnCampIdChanging(System.Nullable<short> value);
    partial void OnCampIdChanged();
    partial void OnSponsorIdChanging(System.Nullable<short> value);
    partial void OnSponsorIdChanged();
    partial void OnCampStatusIdChanging(System.Nullable<short> value);
    partial void OnCampStatusIdChanged();
    partial void OnOPDCountChanging(System.Nullable<int> value);
    partial void OnOPDCountChanged();
    partial void OnORCountChanging(System.Nullable<int> value);
    partial void OnORCountChanged();
    partial void OnGlassesCountChanging(System.Nullable<int> value);
    partial void OnGlassesCountChanged();
    partial void OnCampStatsSummaryNoteChanging(string value);
    partial void OnCampStatsSummaryNoteChanged();
    partial void OnCampStatsSummaryDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnCampStatsSummaryDateInChanged();
    partial void OnCampStatsSummaryAddByChanging(string value);
    partial void OnCampStatsSummaryAddByChanged();
    partial void OnCampStatsSummaryUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCampStatsSummaryUpdatedDateChanged();
    partial void OnCampStatsSummaryUpdatedByChanging(string value);
    partial void OnCampStatsSummaryUpdatedByChanged();
    partial void OnCampStatsSummaryStatusChanging(System.Nullable<bool> value);
    partial void OnCampStatsSummaryStatusChanged();
    partial void OnCampStatsSummaryIsClosedChanging(System.Nullable<bool> value);
    partial void OnCampStatsSummaryIsClosedChanged();
    #endregion
		
		public CampStatsSummaryModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt")]
		public System.Nullable<short> PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this.OnPlanConfigYearChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigYear = value;
					this.SendPropertyChanged("PlanConfigYear");
					this.OnPlanConfigYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt")]
		public System.Nullable<short> TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt")]
		public System.Nullable<short> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="TinyInt")]
		public System.Nullable<byte> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt")]
		public System.Nullable<short> CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt")]
		public System.Nullable<short> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt")]
		public System.Nullable<short> CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPDCount", DbType="Int")]
		public System.Nullable<int> OPDCount
		{
			get
			{
				return this._OPDCount;
			}
			set
			{
				if ((this._OPDCount != value))
				{
					this.OnOPDCountChanging(value);
					this.SendPropertyChanging();
					this._OPDCount = value;
					this.SendPropertyChanged("OPDCount");
					this.OnOPDCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ORCount", DbType="Int")]
		public System.Nullable<int> ORCount
		{
			get
			{
				return this._ORCount;
			}
			set
			{
				if ((this._ORCount != value))
				{
					this.OnORCountChanging(value);
					this.SendPropertyChanging();
					this._ORCount = value;
					this.SendPropertyChanged("ORCount");
					this.OnORCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlassesCount", DbType="Int")]
		public System.Nullable<int> GlassesCount
		{
			get
			{
				return this._GlassesCount;
			}
			set
			{
				if ((this._GlassesCount != value))
				{
					this.OnGlassesCountChanging(value);
					this.SendPropertyChanging();
					this._GlassesCount = value;
					this.SendPropertyChanged("GlassesCount");
					this.OnGlassesCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatsSummaryNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string CampStatsSummaryNote
		{
			get
			{
				return this._CampStatsSummaryNote;
			}
			set
			{
				if ((this._CampStatsSummaryNote != value))
				{
					this.OnCampStatsSummaryNoteChanging(value);
					this.SendPropertyChanging();
					this._CampStatsSummaryNote = value;
					this.SendPropertyChanged("CampStatsSummaryNote");
					this.OnCampStatsSummaryNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatsSummaryDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampStatsSummaryDateIn
		{
			get
			{
				return this._CampStatsSummaryDateIn;
			}
			set
			{
				if ((this._CampStatsSummaryDateIn != value))
				{
					this.OnCampStatsSummaryDateInChanging(value);
					this.SendPropertyChanging();
					this._CampStatsSummaryDateIn = value;
					this.SendPropertyChanged("CampStatsSummaryDateIn");
					this.OnCampStatsSummaryDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatsSummaryAddBy", DbType="NVarChar(128)")]
		public string CampStatsSummaryAddBy
		{
			get
			{
				return this._CampStatsSummaryAddBy;
			}
			set
			{
				if ((this._CampStatsSummaryAddBy != value))
				{
					this.OnCampStatsSummaryAddByChanging(value);
					this.SendPropertyChanging();
					this._CampStatsSummaryAddBy = value;
					this.SendPropertyChanged("CampStatsSummaryAddBy");
					this.OnCampStatsSummaryAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatsSummaryUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampStatsSummaryUpdatedDate
		{
			get
			{
				return this._CampStatsSummaryUpdatedDate;
			}
			set
			{
				if ((this._CampStatsSummaryUpdatedDate != value))
				{
					this.OnCampStatsSummaryUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._CampStatsSummaryUpdatedDate = value;
					this.SendPropertyChanged("CampStatsSummaryUpdatedDate");
					this.OnCampStatsSummaryUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatsSummaryUpdatedBy", DbType="NVarChar(128)")]
		public string CampStatsSummaryUpdatedBy
		{
			get
			{
				return this._CampStatsSummaryUpdatedBy;
			}
			set
			{
				if ((this._CampStatsSummaryUpdatedBy != value))
				{
					this.OnCampStatsSummaryUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._CampStatsSummaryUpdatedBy = value;
					this.SendPropertyChanged("CampStatsSummaryUpdatedBy");
					this.OnCampStatsSummaryUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatsSummaryStatus", DbType="Bit")]
		public System.Nullable<bool> CampStatsSummaryStatus
		{
			get
			{
				return this._CampStatsSummaryStatus;
			}
			set
			{
				if ((this._CampStatsSummaryStatus != value))
				{
					this.OnCampStatsSummaryStatusChanging(value);
					this.SendPropertyChanging();
					this._CampStatsSummaryStatus = value;
					this.SendPropertyChanged("CampStatsSummaryStatus");
					this.OnCampStatsSummaryStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatsSummaryIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampStatsSummaryIsClosed
		{
			get
			{
				return this._CampStatsSummaryIsClosed;
			}
			set
			{
				if ((this._CampStatsSummaryIsClosed != value))
				{
					this.OnCampStatsSummaryIsClosedChanging(value);
					this.SendPropertyChanging();
					this._CampStatsSummaryIsClosed = value;
					this.SendPropertyChanged("CampStatsSummaryIsClosed");
					this.OnCampStatsSummaryIsClosedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFollowUpStatus")]
	public partial class FollowUpStatusModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _FollowUpStatusId;
		
		private string _FollowUpStatusDescAR;
		
		private string _FollowUpStatusDescEN;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<bool> _FollowUpStatusEnabled;
		
		private string _FollowUpStatusAddBy;
		
		private System.Nullable<System.DateTime> _FollowUpStatusUpdatedDate;
		
		private string _FollowUpStatusUpdatedBy;
		
		private System.Nullable<short> _FollowUpStatusOrder;
		
		private string _FollowUpStatusImage;
		
		private System.Nullable<bool> _FollowUpStatusIsFollow;
		
		private string _FollowUpStatusDivider;
		
		private string _FollowUpStatusClassName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFollowUpStatusIdChanging(short value);
    partial void OnFollowUpStatusIdChanged();
    partial void OnFollowUpStatusDescARChanging(string value);
    partial void OnFollowUpStatusDescARChanged();
    partial void OnFollowUpStatusDescENChanging(string value);
    partial void OnFollowUpStatusDescENChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnFollowUpStatusEnabledChanging(System.Nullable<bool> value);
    partial void OnFollowUpStatusEnabledChanged();
    partial void OnFollowUpStatusAddByChanging(string value);
    partial void OnFollowUpStatusAddByChanged();
    partial void OnFollowUpStatusUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFollowUpStatusUpdatedDateChanged();
    partial void OnFollowUpStatusUpdatedByChanging(string value);
    partial void OnFollowUpStatusUpdatedByChanged();
    partial void OnFollowUpStatusOrderChanging(System.Nullable<short> value);
    partial void OnFollowUpStatusOrderChanged();
    partial void OnFollowUpStatusImageChanging(string value);
    partial void OnFollowUpStatusImageChanged();
    partial void OnFollowUpStatusIsFollowChanging(System.Nullable<bool> value);
    partial void OnFollowUpStatusIsFollowChanged();
    partial void OnFollowUpStatusDividerChanging(string value);
    partial void OnFollowUpStatusDividerChanged();
    partial void OnFollowUpStatusClassNameChanging(string value);
    partial void OnFollowUpStatusClassNameChanged();
    #endregion
		
		public FollowUpStatusModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this.OnFollowUpStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusId = value;
					this.SendPropertyChanged("FollowUpStatusId");
					this.OnFollowUpStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusDescAR", DbType="NVarChar(50)")]
		public string FollowUpStatusDescAR
		{
			get
			{
				return this._FollowUpStatusDescAR;
			}
			set
			{
				if ((this._FollowUpStatusDescAR != value))
				{
					this.OnFollowUpStatusDescARChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusDescAR = value;
					this.SendPropertyChanged("FollowUpStatusDescAR");
					this.OnFollowUpStatusDescARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusDescEN", DbType="NVarChar(50)")]
		public string FollowUpStatusDescEN
		{
			get
			{
				return this._FollowUpStatusDescEN;
			}
			set
			{
				if ((this._FollowUpStatusDescEN != value))
				{
					this.OnFollowUpStatusDescENChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusDescEN = value;
					this.SendPropertyChanged("FollowUpStatusDescEN");
					this.OnFollowUpStatusDescENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusEnabled", DbType="Bit")]
		public System.Nullable<bool> FollowUpStatusEnabled
		{
			get
			{
				return this._FollowUpStatusEnabled;
			}
			set
			{
				if ((this._FollowUpStatusEnabled != value))
				{
					this.OnFollowUpStatusEnabledChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusEnabled = value;
					this.SendPropertyChanged("FollowUpStatusEnabled");
					this.OnFollowUpStatusEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusAddBy", DbType="NVarChar(128)")]
		public string FollowUpStatusAddBy
		{
			get
			{
				return this._FollowUpStatusAddBy;
			}
			set
			{
				if ((this._FollowUpStatusAddBy != value))
				{
					this.OnFollowUpStatusAddByChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusAddBy = value;
					this.SendPropertyChanged("FollowUpStatusAddBy");
					this.OnFollowUpStatusAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusUpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> FollowUpStatusUpdatedDate
		{
			get
			{
				return this._FollowUpStatusUpdatedDate;
			}
			set
			{
				if ((this._FollowUpStatusUpdatedDate != value))
				{
					this.OnFollowUpStatusUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusUpdatedDate = value;
					this.SendPropertyChanged("FollowUpStatusUpdatedDate");
					this.OnFollowUpStatusUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusUpdatedBy", DbType="NVarChar(128)")]
		public string FollowUpStatusUpdatedBy
		{
			get
			{
				return this._FollowUpStatusUpdatedBy;
			}
			set
			{
				if ((this._FollowUpStatusUpdatedBy != value))
				{
					this.OnFollowUpStatusUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusUpdatedBy = value;
					this.SendPropertyChanged("FollowUpStatusUpdatedBy");
					this.OnFollowUpStatusUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusOrder", DbType="SmallInt")]
		public System.Nullable<short> FollowUpStatusOrder
		{
			get
			{
				return this._FollowUpStatusOrder;
			}
			set
			{
				if ((this._FollowUpStatusOrder != value))
				{
					this.OnFollowUpStatusOrderChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusOrder = value;
					this.SendPropertyChanged("FollowUpStatusOrder");
					this.OnFollowUpStatusOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusImage", DbType="NVarChar(20)")]
		public string FollowUpStatusImage
		{
			get
			{
				return this._FollowUpStatusImage;
			}
			set
			{
				if ((this._FollowUpStatusImage != value))
				{
					this.OnFollowUpStatusImageChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusImage = value;
					this.SendPropertyChanged("FollowUpStatusImage");
					this.OnFollowUpStatusImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusIsFollow", DbType="Bit")]
		public System.Nullable<bool> FollowUpStatusIsFollow
		{
			get
			{
				return this._FollowUpStatusIsFollow;
			}
			set
			{
				if ((this._FollowUpStatusIsFollow != value))
				{
					this.OnFollowUpStatusIsFollowChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusIsFollow = value;
					this.SendPropertyChanged("FollowUpStatusIsFollow");
					this.OnFollowUpStatusIsFollowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusDivider", DbType="NVarChar(2)")]
		public string FollowUpStatusDivider
		{
			get
			{
				return this._FollowUpStatusDivider;
			}
			set
			{
				if ((this._FollowUpStatusDivider != value))
				{
					this.OnFollowUpStatusDividerChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusDivider = value;
					this.SendPropertyChanged("FollowUpStatusDivider");
					this.OnFollowUpStatusDividerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusClassName", DbType="NVarChar(30)")]
		public string FollowUpStatusClassName
		{
			get
			{
				return this._FollowUpStatusClassName;
			}
			set
			{
				if ((this._FollowUpStatusClassName != value))
				{
					this.OnFollowUpStatusClassNameChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusClassName = value;
					this.SendPropertyChanged("FollowUpStatusClassName");
					this.OnFollowUpStatusClassNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCampFollowUpDrugs")]
	public partial class CampFollowUpDrugModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpDrugsDate;
		
		private string _CampFollowUpDrugsNote;
		
		private System.Nullable<short> _PlanConfigYear;
		
		private System.Nullable<short> _TourId;
		
		private System.Nullable<short> _TeamId;
		
		private System.Nullable<short> _CountryId;
		
		private System.Nullable<short> _CampId;
		
		private System.Nullable<short> _SponsorId;
		
		private System.Nullable<short> _CampStatusId;
		
		private System.Nullable<System.DateTime> _CampFollowUpDrugsDateIn;
		
		private string _CampFollowUpDrugsAddBy;
		
		private System.Nullable<System.DateTime> _CampFollowUpDrugsUpdatedDate;
		
		private string _CampFollowUpDrugsUpdatedBy;
		
		private System.Nullable<bool> _CampFollowUpDrugsStatus;
		
		private System.Nullable<bool> _CampFollowUpDrugsIsClosed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnFollowUpStatusIdChanging(short value);
    partial void OnFollowUpStatusIdChanged();
    partial void OnCampFollowUpDrugsDateChanging(System.DateTime value);
    partial void OnCampFollowUpDrugsDateChanged();
    partial void OnCampFollowUpDrugsNoteChanging(string value);
    partial void OnCampFollowUpDrugsNoteChanged();
    partial void OnPlanConfigYearChanging(System.Nullable<short> value);
    partial void OnPlanConfigYearChanged();
    partial void OnTourIdChanging(System.Nullable<short> value);
    partial void OnTourIdChanged();
    partial void OnTeamIdChanging(System.Nullable<short> value);
    partial void OnTeamIdChanged();
    partial void OnCountryIdChanging(System.Nullable<short> value);
    partial void OnCountryIdChanged();
    partial void OnCampIdChanging(System.Nullable<short> value);
    partial void OnCampIdChanged();
    partial void OnSponsorIdChanging(System.Nullable<short> value);
    partial void OnSponsorIdChanged();
    partial void OnCampStatusIdChanging(System.Nullable<short> value);
    partial void OnCampStatusIdChanged();
    partial void OnCampFollowUpDrugsDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnCampFollowUpDrugsDateInChanged();
    partial void OnCampFollowUpDrugsAddByChanging(string value);
    partial void OnCampFollowUpDrugsAddByChanged();
    partial void OnCampFollowUpDrugsUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCampFollowUpDrugsUpdatedDateChanged();
    partial void OnCampFollowUpDrugsUpdatedByChanging(string value);
    partial void OnCampFollowUpDrugsUpdatedByChanged();
    partial void OnCampFollowUpDrugsStatusChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpDrugsStatusChanged();
    partial void OnCampFollowUpDrugsIsClosedChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpDrugsIsClosedChanged();
    #endregion
		
		public CampFollowUpDrugModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this.OnFollowUpStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusId = value;
					this.SendPropertyChanged("FollowUpStatusId");
					this.OnFollowUpStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CampFollowUpDrugsDate
		{
			get
			{
				return this._CampFollowUpDrugsDate;
			}
			set
			{
				if ((this._CampFollowUpDrugsDate != value))
				{
					this.OnCampFollowUpDrugsDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpDrugsDate = value;
					this.SendPropertyChanged("CampFollowUpDrugsDate");
					this.OnCampFollowUpDrugsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CampFollowUpDrugsNote
		{
			get
			{
				return this._CampFollowUpDrugsNote;
			}
			set
			{
				if ((this._CampFollowUpDrugsNote != value))
				{
					this.OnCampFollowUpDrugsNoteChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpDrugsNote = value;
					this.SendPropertyChanged("CampFollowUpDrugsNote");
					this.OnCampFollowUpDrugsNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt")]
		public System.Nullable<short> PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this.OnPlanConfigYearChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigYear = value;
					this.SendPropertyChanged("PlanConfigYear");
					this.OnPlanConfigYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt")]
		public System.Nullable<short> TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt")]
		public System.Nullable<short> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt")]
		public System.Nullable<short> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt")]
		public System.Nullable<short> CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt")]
		public System.Nullable<short> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt")]
		public System.Nullable<short> CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpDrugsDateIn
		{
			get
			{
				return this._CampFollowUpDrugsDateIn;
			}
			set
			{
				if ((this._CampFollowUpDrugsDateIn != value))
				{
					this.OnCampFollowUpDrugsDateInChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpDrugsDateIn = value;
					this.SendPropertyChanged("CampFollowUpDrugsDateIn");
					this.OnCampFollowUpDrugsDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsAddBy", DbType="NVarChar(128)")]
		public string CampFollowUpDrugsAddBy
		{
			get
			{
				return this._CampFollowUpDrugsAddBy;
			}
			set
			{
				if ((this._CampFollowUpDrugsAddBy != value))
				{
					this.OnCampFollowUpDrugsAddByChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpDrugsAddBy = value;
					this.SendPropertyChanged("CampFollowUpDrugsAddBy");
					this.OnCampFollowUpDrugsAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpDrugsUpdatedDate
		{
			get
			{
				return this._CampFollowUpDrugsUpdatedDate;
			}
			set
			{
				if ((this._CampFollowUpDrugsUpdatedDate != value))
				{
					this.OnCampFollowUpDrugsUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpDrugsUpdatedDate = value;
					this.SendPropertyChanged("CampFollowUpDrugsUpdatedDate");
					this.OnCampFollowUpDrugsUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsUpdatedBy", DbType="NVarChar(128)")]
		public string CampFollowUpDrugsUpdatedBy
		{
			get
			{
				return this._CampFollowUpDrugsUpdatedBy;
			}
			set
			{
				if ((this._CampFollowUpDrugsUpdatedBy != value))
				{
					this.OnCampFollowUpDrugsUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpDrugsUpdatedBy = value;
					this.SendPropertyChanged("CampFollowUpDrugsUpdatedBy");
					this.OnCampFollowUpDrugsUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsStatus", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpDrugsStatus
		{
			get
			{
				return this._CampFollowUpDrugsStatus;
			}
			set
			{
				if ((this._CampFollowUpDrugsStatus != value))
				{
					this.OnCampFollowUpDrugsStatusChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpDrugsStatus = value;
					this.SendPropertyChanged("CampFollowUpDrugsStatus");
					this.OnCampFollowUpDrugsStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpDrugsIsClosed
		{
			get
			{
				return this._CampFollowUpDrugsIsClosed;
			}
			set
			{
				if ((this._CampFollowUpDrugsIsClosed != value))
				{
					this.OnCampFollowUpDrugsIsClosedChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpDrugsIsClosed = value;
					this.SendPropertyChanged("CampFollowUpDrugsIsClosed");
					this.OnCampFollowUpDrugsIsClosedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRoleExtend")]
	public partial class RoleExtendModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleId;
		
		private string _RoleDescEN;
		
		private string _RoleDescAR;
		
		private System.Nullable<System.DateTime> _RoleDateIn;
		
		private string _RoleAddBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnRoleDescENChanging(string value);
    partial void OnRoleDescENChanged();
    partial void OnRoleDescARChanging(string value);
    partial void OnRoleDescARChanged();
    partial void OnRoleDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnRoleDateInChanged();
    partial void OnRoleAddByChanging(string value);
    partial void OnRoleAddByChanged();
    #endregion
		
		public RoleExtendModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDescEN", DbType="NVarChar(50)")]
		public string RoleDescEN
		{
			get
			{
				return this._RoleDescEN;
			}
			set
			{
				if ((this._RoleDescEN != value))
				{
					this.OnRoleDescENChanging(value);
					this.SendPropertyChanging();
					this._RoleDescEN = value;
					this.SendPropertyChanged("RoleDescEN");
					this.OnRoleDescENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDescAR", DbType="NVarChar(50)")]
		public string RoleDescAR
		{
			get
			{
				return this._RoleDescAR;
			}
			set
			{
				if ((this._RoleDescAR != value))
				{
					this.OnRoleDescARChanging(value);
					this.SendPropertyChanging();
					this._RoleDescAR = value;
					this.SendPropertyChanged("RoleDescAR");
					this.OnRoleDescARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RoleDateIn
		{
			get
			{
				return this._RoleDateIn;
			}
			set
			{
				if ((this._RoleDateIn != value))
				{
					this.OnRoleDateInChanging(value);
					this.SendPropertyChanging();
					this._RoleDateIn = value;
					this.SendPropertyChanged("RoleDateIn");
					this.OnRoleDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleAddBy", DbType="NVarChar(128)")]
		public string RoleAddBy
		{
			get
			{
				return this._RoleAddBy;
			}
			set
			{
				if ((this._RoleAddBy != value))
				{
					this.OnRoleAddByChanging(value);
					this.SendPropertyChanging();
					this._RoleAddBy = value;
					this.SendPropertyChanged("RoleAddBy");
					this.OnRoleAddByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRoleGroup")]
	public partial class RoleGroupModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RoleGroupId;
		
		private string _RoleGroupDescAR;
		
		private string _RoleGroupDescEN;
		
		private System.Nullable<System.DateTime> _RoleGroupDateIn;
		
		private System.Nullable<bool> _RoleGroupStatus;
		
		private string _RoleGroupAddBy;
		
		private System.Nullable<System.DateTime> _RoleGroupUpdatedDate;
		
		private string _RoleGroupUpdatedBy;
		
		private System.Nullable<short> _RoleGroupOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleGroupIdChanging(short value);
    partial void OnRoleGroupIdChanged();
    partial void OnRoleGroupDescARChanging(string value);
    partial void OnRoleGroupDescARChanged();
    partial void OnRoleGroupDescENChanging(string value);
    partial void OnRoleGroupDescENChanged();
    partial void OnRoleGroupDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnRoleGroupDateInChanged();
    partial void OnRoleGroupStatusChanging(System.Nullable<bool> value);
    partial void OnRoleGroupStatusChanged();
    partial void OnRoleGroupAddByChanging(string value);
    partial void OnRoleGroupAddByChanged();
    partial void OnRoleGroupUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRoleGroupUpdatedDateChanged();
    partial void OnRoleGroupUpdatedByChanging(string value);
    partial void OnRoleGroupUpdatedByChanged();
    partial void OnRoleGroupOrderChanging(System.Nullable<short> value);
    partial void OnRoleGroupOrderChanged();
    #endregion
		
		public RoleGroupModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short RoleGroupId
		{
			get
			{
				return this._RoleGroupId;
			}
			set
			{
				if ((this._RoleGroupId != value))
				{
					this.OnRoleGroupIdChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupId = value;
					this.SendPropertyChanged("RoleGroupId");
					this.OnRoleGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupDescAR", DbType="NVarChar(50)")]
		public string RoleGroupDescAR
		{
			get
			{
				return this._RoleGroupDescAR;
			}
			set
			{
				if ((this._RoleGroupDescAR != value))
				{
					this.OnRoleGroupDescARChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupDescAR = value;
					this.SendPropertyChanged("RoleGroupDescAR");
					this.OnRoleGroupDescARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupDescEN", DbType="NVarChar(50)")]
		public string RoleGroupDescEN
		{
			get
			{
				return this._RoleGroupDescEN;
			}
			set
			{
				if ((this._RoleGroupDescEN != value))
				{
					this.OnRoleGroupDescENChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupDescEN = value;
					this.SendPropertyChanged("RoleGroupDescEN");
					this.OnRoleGroupDescENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RoleGroupDateIn
		{
			get
			{
				return this._RoleGroupDateIn;
			}
			set
			{
				if ((this._RoleGroupDateIn != value))
				{
					this.OnRoleGroupDateInChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupDateIn = value;
					this.SendPropertyChanged("RoleGroupDateIn");
					this.OnRoleGroupDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupStatus", DbType="Bit")]
		public System.Nullable<bool> RoleGroupStatus
		{
			get
			{
				return this._RoleGroupStatus;
			}
			set
			{
				if ((this._RoleGroupStatus != value))
				{
					this.OnRoleGroupStatusChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupStatus = value;
					this.SendPropertyChanged("RoleGroupStatus");
					this.OnRoleGroupStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupAddBy", DbType="NVarChar(128)")]
		public string RoleGroupAddBy
		{
			get
			{
				return this._RoleGroupAddBy;
			}
			set
			{
				if ((this._RoleGroupAddBy != value))
				{
					this.OnRoleGroupAddByChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupAddBy = value;
					this.SendPropertyChanged("RoleGroupAddBy");
					this.OnRoleGroupAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupUpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RoleGroupUpdatedDate
		{
			get
			{
				return this._RoleGroupUpdatedDate;
			}
			set
			{
				if ((this._RoleGroupUpdatedDate != value))
				{
					this.OnRoleGroupUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupUpdatedDate = value;
					this.SendPropertyChanged("RoleGroupUpdatedDate");
					this.OnRoleGroupUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupUpdatedBy", DbType="NVarChar(128)")]
		public string RoleGroupUpdatedBy
		{
			get
			{
				return this._RoleGroupUpdatedBy;
			}
			set
			{
				if ((this._RoleGroupUpdatedBy != value))
				{
					this.OnRoleGroupUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupUpdatedBy = value;
					this.SendPropertyChanged("RoleGroupUpdatedBy");
					this.OnRoleGroupUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupOrder", DbType="SmallInt")]
		public System.Nullable<short> RoleGroupOrder
		{
			get
			{
				return this._RoleGroupOrder;
			}
			set
			{
				if ((this._RoleGroupOrder != value))
				{
					this.OnRoleGroupOrderChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupOrder = value;
					this.SendPropertyChanged("RoleGroupOrder");
					this.OnRoleGroupOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRoleDivider")]
	public partial class RoleDividerModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RoleDividerId;
		
		private string _RoleDividerDescAR;
		
		private string _RoleDividerDescEN;
		
		private System.Nullable<System.DateTime> _RoleDividerDateIn;
		
		private System.Nullable<bool> _RoleDividerStatus;
		
		private System.Nullable<short> _RoleDividerOrder;
		
		private string _RoleDividerAddBy;
		
		private System.Nullable<System.DateTime> _RoleDividerUpdatedDate;
		
		private string _RoleDividerUpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleDividerIdChanging(short value);
    partial void OnRoleDividerIdChanged();
    partial void OnRoleDividerDescARChanging(string value);
    partial void OnRoleDividerDescARChanged();
    partial void OnRoleDividerDescENChanging(string value);
    partial void OnRoleDividerDescENChanged();
    partial void OnRoleDividerDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnRoleDividerDateInChanged();
    partial void OnRoleDividerStatusChanging(System.Nullable<bool> value);
    partial void OnRoleDividerStatusChanged();
    partial void OnRoleDividerOrderChanging(System.Nullable<short> value);
    partial void OnRoleDividerOrderChanged();
    partial void OnRoleDividerAddByChanging(string value);
    partial void OnRoleDividerAddByChanged();
    partial void OnRoleDividerUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRoleDividerUpdatedDateChanged();
    partial void OnRoleDividerUpdatedByChanging(string value);
    partial void OnRoleDividerUpdatedByChanged();
    #endregion
		
		public RoleDividerModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short RoleDividerId
		{
			get
			{
				return this._RoleDividerId;
			}
			set
			{
				if ((this._RoleDividerId != value))
				{
					this.OnRoleDividerIdChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerId = value;
					this.SendPropertyChanged("RoleDividerId");
					this.OnRoleDividerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerDescAR", DbType="NVarChar(50)")]
		public string RoleDividerDescAR
		{
			get
			{
				return this._RoleDividerDescAR;
			}
			set
			{
				if ((this._RoleDividerDescAR != value))
				{
					this.OnRoleDividerDescARChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerDescAR = value;
					this.SendPropertyChanged("RoleDividerDescAR");
					this.OnRoleDividerDescARChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerDescEN", DbType="NVarChar(50)")]
		public string RoleDividerDescEN
		{
			get
			{
				return this._RoleDividerDescEN;
			}
			set
			{
				if ((this._RoleDividerDescEN != value))
				{
					this.OnRoleDividerDescENChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerDescEN = value;
					this.SendPropertyChanged("RoleDividerDescEN");
					this.OnRoleDividerDescENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RoleDividerDateIn
		{
			get
			{
				return this._RoleDividerDateIn;
			}
			set
			{
				if ((this._RoleDividerDateIn != value))
				{
					this.OnRoleDividerDateInChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerDateIn = value;
					this.SendPropertyChanged("RoleDividerDateIn");
					this.OnRoleDividerDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerStatus", DbType="Bit")]
		public System.Nullable<bool> RoleDividerStatus
		{
			get
			{
				return this._RoleDividerStatus;
			}
			set
			{
				if ((this._RoleDividerStatus != value))
				{
					this.OnRoleDividerStatusChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerStatus = value;
					this.SendPropertyChanged("RoleDividerStatus");
					this.OnRoleDividerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerOrder", DbType="SmallInt")]
		public System.Nullable<short> RoleDividerOrder
		{
			get
			{
				return this._RoleDividerOrder;
			}
			set
			{
				if ((this._RoleDividerOrder != value))
				{
					this.OnRoleDividerOrderChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerOrder = value;
					this.SendPropertyChanged("RoleDividerOrder");
					this.OnRoleDividerOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerAddBy", DbType="NVarChar(128)")]
		public string RoleDividerAddBy
		{
			get
			{
				return this._RoleDividerAddBy;
			}
			set
			{
				if ((this._RoleDividerAddBy != value))
				{
					this.OnRoleDividerAddByChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerAddBy = value;
					this.SendPropertyChanged("RoleDividerAddBy");
					this.OnRoleDividerAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerUpdatedDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RoleDividerUpdatedDate
		{
			get
			{
				return this._RoleDividerUpdatedDate;
			}
			set
			{
				if ((this._RoleDividerUpdatedDate != value))
				{
					this.OnRoleDividerUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerUpdatedDate = value;
					this.SendPropertyChanged("RoleDividerUpdatedDate");
					this.OnRoleDividerUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerUpdatedBy", DbType="NVarChar(128)")]
		public string RoleDividerUpdatedBy
		{
			get
			{
				return this._RoleDividerUpdatedBy;
			}
			set
			{
				if ((this._RoleDividerUpdatedBy != value))
				{
					this.OnRoleDividerUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerUpdatedBy = value;
					this.SendPropertyChanged("RoleDividerUpdatedBy");
					this.OnRoleDividerUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRoleClassDivider")]
	public partial class RoleClassDividerModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleId;
		
		private short _RoleDividerId;
		
		private System.Nullable<System.DateTime> _RoleClassDateIn;
		
		private string _RoleClassAddBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnRoleDividerIdChanging(short value);
    partial void OnRoleDividerIdChanged();
    partial void OnRoleClassDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnRoleClassDateInChanged();
    partial void OnRoleClassAddByChanging(string value);
    partial void OnRoleClassAddByChanged();
    #endregion
		
		public RoleClassDividerModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short RoleDividerId
		{
			get
			{
				return this._RoleDividerId;
			}
			set
			{
				if ((this._RoleDividerId != value))
				{
					this.OnRoleDividerIdChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerId = value;
					this.SendPropertyChanged("RoleDividerId");
					this.OnRoleDividerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleClassDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RoleClassDateIn
		{
			get
			{
				return this._RoleClassDateIn;
			}
			set
			{
				if ((this._RoleClassDateIn != value))
				{
					this.OnRoleClassDateInChanging(value);
					this.SendPropertyChanging();
					this._RoleClassDateIn = value;
					this.SendPropertyChanged("RoleClassDateIn");
					this.OnRoleClassDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleClassAddBy", DbType="NVarChar(128)")]
		public string RoleClassAddBy
		{
			get
			{
				return this._RoleClassAddBy;
			}
			set
			{
				if ((this._RoleClassAddBy != value))
				{
					this.OnRoleClassAddByChanging(value);
					this.SendPropertyChanging();
					this._RoleClassAddBy = value;
					this.SendPropertyChanged("RoleClassAddBy");
					this.OnRoleClassAddByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRoleGroupDivider")]
	public partial class RoleGroupDividerModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleId;
		
		private short _RoleGroupId;
		
		private short _RoleDividerId;
		
		private System.Nullable<System.DateTime> _RoleGroupDividerDateIn;
		
		private string _RoleGroupDividerAddBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    partial void OnRoleGroupIdChanging(short value);
    partial void OnRoleGroupIdChanged();
    partial void OnRoleDividerIdChanging(short value);
    partial void OnRoleDividerIdChanged();
    partial void OnRoleGroupDividerDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnRoleGroupDividerDateInChanged();
    partial void OnRoleGroupDividerAddByChanging(string value);
    partial void OnRoleGroupDividerAddByChanged();
    #endregion
		
		public RoleGroupDividerModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short RoleGroupId
		{
			get
			{
				return this._RoleGroupId;
			}
			set
			{
				if ((this._RoleGroupId != value))
				{
					this.OnRoleGroupIdChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupId = value;
					this.SendPropertyChanged("RoleGroupId");
					this.OnRoleGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short RoleDividerId
		{
			get
			{
				return this._RoleDividerId;
			}
			set
			{
				if ((this._RoleDividerId != value))
				{
					this.OnRoleDividerIdChanging(value);
					this.SendPropertyChanging();
					this._RoleDividerId = value;
					this.SendPropertyChanged("RoleDividerId");
					this.OnRoleDividerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupDividerDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> RoleGroupDividerDateIn
		{
			get
			{
				return this._RoleGroupDividerDateIn;
			}
			set
			{
				if ((this._RoleGroupDividerDateIn != value))
				{
					this.OnRoleGroupDividerDateInChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupDividerDateIn = value;
					this.SendPropertyChanged("RoleGroupDividerDateIn");
					this.OnRoleGroupDividerDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupDividerAddBy", DbType="NVarChar(128)")]
		public string RoleGroupDividerAddBy
		{
			get
			{
				return this._RoleGroupDividerAddBy;
			}
			set
			{
				if ((this._RoleGroupDividerAddBy != value))
				{
					this.OnRoleGroupDividerAddByChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupDividerAddBy = value;
					this.SendPropertyChanged("RoleGroupDividerAddBy");
					this.OnRoleGroupDividerAddByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAttachment")]
	public partial class AttachmentModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AttachmentName;
		
		private string _AttachmentExtension;
		
		private System.Nullable<System.DateTime> _AttachmentDateIn;
		
		private string _AttachmentAddBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentNameChanging(string value);
    partial void OnAttachmentNameChanged();
    partial void OnAttachmentExtensionChanging(string value);
    partial void OnAttachmentExtensionChanged();
    partial void OnAttachmentDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnAttachmentDateInChanged();
    partial void OnAttachmentAddByChanging(string value);
    partial void OnAttachmentAddByChanged();
    #endregion
		
		public AttachmentModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					this.OnAttachmentNameChanging(value);
					this.SendPropertyChanging();
					this._AttachmentName = value;
					this.SendPropertyChanged("AttachmentName");
					this.OnAttachmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentExtension", DbType="NVarChar(20)")]
		public string AttachmentExtension
		{
			get
			{
				return this._AttachmentExtension;
			}
			set
			{
				if ((this._AttachmentExtension != value))
				{
					this.OnAttachmentExtensionChanging(value);
					this.SendPropertyChanging();
					this._AttachmentExtension = value;
					this.SendPropertyChanged("AttachmentExtension");
					this.OnAttachmentExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AttachmentDateIn
		{
			get
			{
				return this._AttachmentDateIn;
			}
			set
			{
				if ((this._AttachmentDateIn != value))
				{
					this.OnAttachmentDateInChanging(value);
					this.SendPropertyChanging();
					this._AttachmentDateIn = value;
					this.SendPropertyChanged("AttachmentDateIn");
					this.OnAttachmentDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentAddBy", DbType="NVarChar(128)")]
		public string AttachmentAddBy
		{
			get
			{
				return this._AttachmentAddBy;
			}
			set
			{
				if ((this._AttachmentAddBy != value))
				{
					this.OnAttachmentAddByChanging(value);
					this.SendPropertyChanging();
					this._AttachmentAddBy = value;
					this.SendPropertyChanged("AttachmentAddBy");
					this.OnAttachmentAddByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGetRoleGroupDivider")]
	public partial class vwGetRoleGroupDividerModel
	{
		
		private string _RoleId;
		
		private short _RoleGroupId;
		
		private string _RoleGroupDescAR;
		
		private short _RoleDividerId;
		
		private string _RoleDividerDescAR;
		
		private string _RoleDividerDescEN;
		
		private string _Name;
		
		private string _RoleDescEN;
		
		private string _RoleDescAR;
		
		public vwGetRoleGroupDividerModel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupId", DbType="SmallInt NOT NULL")]
		public short RoleGroupId
		{
			get
			{
				return this._RoleGroupId;
			}
			set
			{
				if ((this._RoleGroupId != value))
				{
					this._RoleGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupDescAR", DbType="NVarChar(50)")]
		public string RoleGroupDescAR
		{
			get
			{
				return this._RoleGroupDescAR;
			}
			set
			{
				if ((this._RoleGroupDescAR != value))
				{
					this._RoleGroupDescAR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerId", DbType="SmallInt NOT NULL")]
		public short RoleDividerId
		{
			get
			{
				return this._RoleDividerId;
			}
			set
			{
				if ((this._RoleDividerId != value))
				{
					this._RoleDividerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerDescAR", DbType="NVarChar(50)")]
		public string RoleDividerDescAR
		{
			get
			{
				return this._RoleDividerDescAR;
			}
			set
			{
				if ((this._RoleDividerDescAR != value))
				{
					this._RoleDividerDescAR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDividerDescEN", DbType="NVarChar(50)")]
		public string RoleDividerDescEN
		{
			get
			{
				return this._RoleDividerDescEN;
			}
			set
			{
				if ((this._RoleDividerDescEN != value))
				{
					this._RoleDividerDescEN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDescEN", DbType="NVarChar(50)")]
		public string RoleDescEN
		{
			get
			{
				return this._RoleDescEN;
			}
			set
			{
				if ((this._RoleDescEN != value))
				{
					this._RoleDescEN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleDescAR", DbType="NVarChar(50)")]
		public string RoleDescAR
		{
			get
			{
				return this._RoleDescAR;
			}
			set
			{
				if ((this._RoleDescAR != value))
				{
					this._RoleDescAR = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserGroups")]
	public partial class UserGroupModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _RoleGroupId;
		
		private string _UserId;
		
		private System.Nullable<System.DateTime> _UserGroupDateIn;
		
		private string _UserGroupAddBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleGroupIdChanging(short value);
    partial void OnRoleGroupIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnUserGroupDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnUserGroupDateInChanged();
    partial void OnUserGroupAddByChanging(string value);
    partial void OnUserGroupAddByChanged();
    #endregion
		
		public UserGroupModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleGroupId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short RoleGroupId
		{
			get
			{
				return this._RoleGroupId;
			}
			set
			{
				if ((this._RoleGroupId != value))
				{
					this.OnRoleGroupIdChanging(value);
					this.SendPropertyChanging();
					this._RoleGroupId = value;
					this.SendPropertyChanged("RoleGroupId");
					this.OnRoleGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> UserGroupDateIn
		{
			get
			{
				return this._UserGroupDateIn;
			}
			set
			{
				if ((this._UserGroupDateIn != value))
				{
					this.OnUserGroupDateInChanging(value);
					this.SendPropertyChanging();
					this._UserGroupDateIn = value;
					this.SendPropertyChanged("UserGroupDateIn");
					this.OnUserGroupDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGroupAddBy", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserGroupAddBy
		{
			get
			{
				return this._UserGroupAddBy;
			}
			set
			{
				if ((this._UserGroupAddBy != value))
				{
					this.OnUserGroupAddByChanging(value);
					this.SendPropertyChanging();
					this._UserGroupAddBy = value;
					this.SendPropertyChanged("UserGroupAddBy");
					this.OnUserGroupAddByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRoleModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRoleModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGetCampFollowUpDrugsWithAttachment")]
	public partial class vwGetCampFollowUpDrugsWithAttachmentModel
	{
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpDrugsDate;
		
		private string _CampFollowUpDrugsNote;
		
		private System.Nullable<short> _PlanConfigYear;
		
		private System.Nullable<short> _TourId;
		
		private System.Nullable<short> _TeamId;
		
		private System.Nullable<short> _CountryId;
		
		private System.Nullable<short> _CampId;
		
		private System.Nullable<short> _SponsorId;
		
		private System.Nullable<short> _CampStatusId;
		
		private System.Nullable<System.DateTime> _CampFollowUpDrugsDateIn;
		
		private string _CampFollowUpDrugsAddBy;
		
		private System.Nullable<System.DateTime> _CampFollowUpDrugsUpdatedDate;
		
		private string _CampFollowUpDrugsUpdatedBy;
		
		private System.Nullable<bool> _CampFollowUpDrugsStatus;
		
		private System.Nullable<bool> _CampFollowUpDrugsIsClosed;
		
		private System.Nullable<int> _AttachmentDrugId;
		
		private string _AttachmentName;
		
		private System.Nullable<System.DateTime> _AttachmentCampFollowUpDrugsDateIn;
		
		private string _AttachmentCampFollowUpDrugsAddBy;
		
		public vwGetCampFollowUpDrugsWithAttachmentModel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL")]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this._PlanConfigId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL")]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this._FollowUpStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsDate", DbType="Date NOT NULL")]
		public System.DateTime CampFollowUpDrugsDate
		{
			get
			{
				return this._CampFollowUpDrugsDate;
			}
			set
			{
				if ((this._CampFollowUpDrugsDate != value))
				{
					this._CampFollowUpDrugsDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CampFollowUpDrugsNote
		{
			get
			{
				return this._CampFollowUpDrugsNote;
			}
			set
			{
				if ((this._CampFollowUpDrugsNote != value))
				{
					this._CampFollowUpDrugsNote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt")]
		public System.Nullable<short> PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this._PlanConfigYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt")]
		public System.Nullable<short> TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this._TourId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt")]
		public System.Nullable<short> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this._TeamId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt")]
		public System.Nullable<short> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt")]
		public System.Nullable<short> CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this._CampId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt")]
		public System.Nullable<short> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this._SponsorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt")]
		public System.Nullable<short> CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this._CampStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpDrugsDateIn
		{
			get
			{
				return this._CampFollowUpDrugsDateIn;
			}
			set
			{
				if ((this._CampFollowUpDrugsDateIn != value))
				{
					this._CampFollowUpDrugsDateIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsAddBy", DbType="NVarChar(128)")]
		public string CampFollowUpDrugsAddBy
		{
			get
			{
				return this._CampFollowUpDrugsAddBy;
			}
			set
			{
				if ((this._CampFollowUpDrugsAddBy != value))
				{
					this._CampFollowUpDrugsAddBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpDrugsUpdatedDate
		{
			get
			{
				return this._CampFollowUpDrugsUpdatedDate;
			}
			set
			{
				if ((this._CampFollowUpDrugsUpdatedDate != value))
				{
					this._CampFollowUpDrugsUpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsUpdatedBy", DbType="NVarChar(128)")]
		public string CampFollowUpDrugsUpdatedBy
		{
			get
			{
				return this._CampFollowUpDrugsUpdatedBy;
			}
			set
			{
				if ((this._CampFollowUpDrugsUpdatedBy != value))
				{
					this._CampFollowUpDrugsUpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsStatus", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpDrugsStatus
		{
			get
			{
				return this._CampFollowUpDrugsStatus;
			}
			set
			{
				if ((this._CampFollowUpDrugsStatus != value))
				{
					this._CampFollowUpDrugsStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpDrugsIsClosed
		{
			get
			{
				return this._CampFollowUpDrugsIsClosed;
			}
			set
			{
				if ((this._CampFollowUpDrugsIsClosed != value))
				{
					this._CampFollowUpDrugsIsClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentDrugId", DbType="Int")]
		public System.Nullable<int> AttachmentDrugId
		{
			get
			{
				return this._AttachmentDrugId;
			}
			set
			{
				if ((this._AttachmentDrugId != value))
				{
					this._AttachmentDrugId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="NVarChar(128)")]
		public string AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					this._AttachmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentCampFollowUpDrugsDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttachmentCampFollowUpDrugsDateIn
		{
			get
			{
				return this._AttachmentCampFollowUpDrugsDateIn;
			}
			set
			{
				if ((this._AttachmentCampFollowUpDrugsDateIn != value))
				{
					this._AttachmentCampFollowUpDrugsDateIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentCampFollowUpDrugsAddBy", DbType="NVarChar(128)")]
		public string AttachmentCampFollowUpDrugsAddBy
		{
			get
			{
				return this._AttachmentCampFollowUpDrugsAddBy;
			}
			set
			{
				if ((this._AttachmentCampFollowUpDrugsAddBy != value))
				{
					this._AttachmentCampFollowUpDrugsAddBy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAttachmentCampFollowUpDrugs")]
	public partial class AttachmentCampFollowUpDrugModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachmentDrugId;
		
		private string _AttachmentName;
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpDrugsDate;
		
		private string _CampFollowUpDrugsNote;
		
		private short _PlanConfigYear;
		
		private short _TourId;
		
		private short _TeamId;
		
		private short _CountryId;
		
		private short _CampId;
		
		private short _SponsorId;
		
		private short _CampStatusId;
		
		private System.Nullable<System.DateTime> _AttachmentCampFollowUpDrugsDateIn;
		
		private string _AttachmentCampFollowUpDrugsAddBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentDrugIdChanging(int value);
    partial void OnAttachmentDrugIdChanged();
    partial void OnAttachmentNameChanging(string value);
    partial void OnAttachmentNameChanged();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnFollowUpStatusIdChanging(short value);
    partial void OnFollowUpStatusIdChanged();
    partial void OnCampFollowUpDrugsDateChanging(System.DateTime value);
    partial void OnCampFollowUpDrugsDateChanged();
    partial void OnCampFollowUpDrugsNoteChanging(string value);
    partial void OnCampFollowUpDrugsNoteChanged();
    partial void OnPlanConfigYearChanging(short value);
    partial void OnPlanConfigYearChanged();
    partial void OnTourIdChanging(short value);
    partial void OnTourIdChanged();
    partial void OnTeamIdChanging(short value);
    partial void OnTeamIdChanged();
    partial void OnCountryIdChanging(short value);
    partial void OnCountryIdChanged();
    partial void OnCampIdChanging(short value);
    partial void OnCampIdChanged();
    partial void OnSponsorIdChanging(short value);
    partial void OnSponsorIdChanged();
    partial void OnCampStatusIdChanging(short value);
    partial void OnCampStatusIdChanged();
    partial void OnAttachmentCampFollowUpDrugsDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnAttachmentCampFollowUpDrugsDateInChanged();
    partial void OnAttachmentCampFollowUpDrugsAddByChanging(string value);
    partial void OnAttachmentCampFollowUpDrugsAddByChanged();
    #endregion
		
		public AttachmentCampFollowUpDrugModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentDrugId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttachmentDrugId
		{
			get
			{
				return this._AttachmentDrugId;
			}
			set
			{
				if ((this._AttachmentDrugId != value))
				{
					this.OnAttachmentDrugIdChanging(value);
					this.SendPropertyChanging();
					this._AttachmentDrugId = value;
					this.SendPropertyChanged("AttachmentDrugId");
					this.OnAttachmentDrugIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					this.OnAttachmentNameChanging(value);
					this.SendPropertyChanging();
					this._AttachmentName = value;
					this.SendPropertyChanged("AttachmentName");
					this.OnAttachmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL")]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL")]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this.OnFollowUpStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusId = value;
					this.SendPropertyChanged("FollowUpStatusId");
					this.OnFollowUpStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsDate", DbType="Date NOT NULL")]
		public System.DateTime CampFollowUpDrugsDate
		{
			get
			{
				return this._CampFollowUpDrugsDate;
			}
			set
			{
				if ((this._CampFollowUpDrugsDate != value))
				{
					this.OnCampFollowUpDrugsDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpDrugsDate = value;
					this.SendPropertyChanged("CampFollowUpDrugsDate");
					this.OnCampFollowUpDrugsDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpDrugsNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CampFollowUpDrugsNote
		{
			get
			{
				return this._CampFollowUpDrugsNote;
			}
			set
			{
				if ((this._CampFollowUpDrugsNote != value))
				{
					this.OnCampFollowUpDrugsNoteChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpDrugsNote = value;
					this.SendPropertyChanged("CampFollowUpDrugsNote");
					this.OnCampFollowUpDrugsNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt NOT NULL")]
		public short PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this.OnPlanConfigYearChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigYear = value;
					this.SendPropertyChanged("PlanConfigYear");
					this.OnPlanConfigYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt NOT NULL")]
		public short TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt NOT NULL")]
		public short TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt NOT NULL")]
		public short CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt NOT NULL")]
		public short CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt NOT NULL")]
		public short SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt NOT NULL")]
		public short CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentCampFollowUpDrugsDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttachmentCampFollowUpDrugsDateIn
		{
			get
			{
				return this._AttachmentCampFollowUpDrugsDateIn;
			}
			set
			{
				if ((this._AttachmentCampFollowUpDrugsDateIn != value))
				{
					this.OnAttachmentCampFollowUpDrugsDateInChanging(value);
					this.SendPropertyChanging();
					this._AttachmentCampFollowUpDrugsDateIn = value;
					this.SendPropertyChanged("AttachmentCampFollowUpDrugsDateIn");
					this.OnAttachmentCampFollowUpDrugsDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentCampFollowUpDrugsAddBy", DbType="NVarChar(128)")]
		public string AttachmentCampFollowUpDrugsAddBy
		{
			get
			{
				return this._AttachmentCampFollowUpDrugsAddBy;
			}
			set
			{
				if ((this._AttachmentCampFollowUpDrugsAddBy != value))
				{
					this.OnAttachmentCampFollowUpDrugsAddByChanging(value);
					this.SendPropertyChanging();
					this._AttachmentCampFollowUpDrugsAddBy = value;
					this.SendPropertyChanged("AttachmentCampFollowUpDrugsAddBy");
					this.OnAttachmentCampFollowUpDrugsAddByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSponsorShip")]
	public partial class SponsorShipModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _SponsorShipId;
		
		private short _SponsorId;
		
		private string _SponsorShipName;
		
		private string _SponsorShipNameEN;
		
		private System.Nullable<bool> _SponsorShipStatus;
		
		private System.Nullable<short> _SponsorShipOrder;
		
		private string _SponsorShipAddBy;
		
		private System.Nullable<System.DateTime> _SponsorShipDateIn;
		
		private string _SponsorShipUpdatedBy;
		
		private System.Nullable<System.DateTime> _SponsorShipUpdatedDateIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSponsorShipIdChanging(short value);
    partial void OnSponsorShipIdChanged();
    partial void OnSponsorIdChanging(short value);
    partial void OnSponsorIdChanged();
    partial void OnSponsorShipNameChanging(string value);
    partial void OnSponsorShipNameChanged();
    partial void OnSponsorShipNameENChanging(string value);
    partial void OnSponsorShipNameENChanged();
    partial void OnSponsorShipStatusChanging(System.Nullable<bool> value);
    partial void OnSponsorShipStatusChanged();
    partial void OnSponsorShipOrderChanging(System.Nullable<short> value);
    partial void OnSponsorShipOrderChanged();
    partial void OnSponsorShipAddByChanging(string value);
    partial void OnSponsorShipAddByChanged();
    partial void OnSponsorShipDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnSponsorShipDateInChanged();
    partial void OnSponsorShipUpdatedByChanging(string value);
    partial void OnSponsorShipUpdatedByChanged();
    partial void OnSponsorShipUpdatedDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnSponsorShipUpdatedDateInChanged();
    #endregion
		
		public SponsorShipModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short SponsorShipId
		{
			get
			{
				return this._SponsorShipId;
			}
			set
			{
				if ((this._SponsorShipId != value))
				{
					this.OnSponsorShipIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorShipId = value;
					this.SendPropertyChanged("SponsorShipId");
					this.OnSponsorShipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt NOT NULL")]
		public short SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipName", DbType="NVarChar(30)")]
		public string SponsorShipName
		{
			get
			{
				return this._SponsorShipName;
			}
			set
			{
				if ((this._SponsorShipName != value))
				{
					this.OnSponsorShipNameChanging(value);
					this.SendPropertyChanging();
					this._SponsorShipName = value;
					this.SendPropertyChanged("SponsorShipName");
					this.OnSponsorShipNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipNameEN", DbType="NVarChar(30)")]
		public string SponsorShipNameEN
		{
			get
			{
				return this._SponsorShipNameEN;
			}
			set
			{
				if ((this._SponsorShipNameEN != value))
				{
					this.OnSponsorShipNameENChanging(value);
					this.SendPropertyChanging();
					this._SponsorShipNameEN = value;
					this.SendPropertyChanged("SponsorShipNameEN");
					this.OnSponsorShipNameENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipStatus", DbType="Bit")]
		public System.Nullable<bool> SponsorShipStatus
		{
			get
			{
				return this._SponsorShipStatus;
			}
			set
			{
				if ((this._SponsorShipStatus != value))
				{
					this.OnSponsorShipStatusChanging(value);
					this.SendPropertyChanging();
					this._SponsorShipStatus = value;
					this.SendPropertyChanged("SponsorShipStatus");
					this.OnSponsorShipStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipOrder", DbType="SmallInt")]
		public System.Nullable<short> SponsorShipOrder
		{
			get
			{
				return this._SponsorShipOrder;
			}
			set
			{
				if ((this._SponsorShipOrder != value))
				{
					this.OnSponsorShipOrderChanging(value);
					this.SendPropertyChanging();
					this._SponsorShipOrder = value;
					this.SendPropertyChanged("SponsorShipOrder");
					this.OnSponsorShipOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipAddBy", DbType="NVarChar(128)")]
		public string SponsorShipAddBy
		{
			get
			{
				return this._SponsorShipAddBy;
			}
			set
			{
				if ((this._SponsorShipAddBy != value))
				{
					this.OnSponsorShipAddByChanging(value);
					this.SendPropertyChanging();
					this._SponsorShipAddBy = value;
					this.SendPropertyChanged("SponsorShipAddBy");
					this.OnSponsorShipAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SponsorShipDateIn
		{
			get
			{
				return this._SponsorShipDateIn;
			}
			set
			{
				if ((this._SponsorShipDateIn != value))
				{
					this.OnSponsorShipDateInChanging(value);
					this.SendPropertyChanging();
					this._SponsorShipDateIn = value;
					this.SendPropertyChanged("SponsorShipDateIn");
					this.OnSponsorShipDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipUpdatedBy", DbType="NVarChar(128)")]
		public string SponsorShipUpdatedBy
		{
			get
			{
				return this._SponsorShipUpdatedBy;
			}
			set
			{
				if ((this._SponsorShipUpdatedBy != value))
				{
					this.OnSponsorShipUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._SponsorShipUpdatedBy = value;
					this.SendPropertyChanged("SponsorShipUpdatedBy");
					this.OnSponsorShipUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipUpdatedDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SponsorShipUpdatedDateIn
		{
			get
			{
				return this._SponsorShipUpdatedDateIn;
			}
			set
			{
				if ((this._SponsorShipUpdatedDateIn != value))
				{
					this.OnSponsorShipUpdatedDateInChanging(value);
					this.SendPropertyChanging();
					this._SponsorShipUpdatedDateIn = value;
					this.SendPropertyChanged("SponsorShipUpdatedDateIn");
					this.OnSponsorShipUpdatedDateInChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCampFollowUpFinancial")]
	public partial class CampFollowUpFinancialModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpFinancialDate;
		
		private string _CampFollowUpFinancialNote;
		
		private decimal _CampFollowUpFinancialAmmount;
		
		private System.Nullable<short> _PlanConfigYear;
		
		private System.Nullable<short> _TourId;
		
		private System.Nullable<short> _TeamId;
		
		private System.Nullable<short> _CountryId;
		
		private System.Nullable<short> _CampId;
		
		private System.Nullable<short> _SponsorId;
		
		private System.Nullable<short> _CampStatusId;
		
		private System.Nullable<System.DateTime> _CampFollowUpFinancialDateIn;
		
		private string _CampFollowUpFinancialAddBy;
		
		private System.Nullable<System.DateTime> _CampFollowUpFinancialUpdatedDate;
		
		private string _CampFollowUpFinancialUpdatedBy;
		
		private System.Nullable<bool> _CampFollowUpFinancialStatus;
		
		private System.Nullable<bool> _CampFollowUpFinancialIsClosed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnFollowUpStatusIdChanging(short value);
    partial void OnFollowUpStatusIdChanged();
    partial void OnCampFollowUpFinancialDateChanging(System.DateTime value);
    partial void OnCampFollowUpFinancialDateChanged();
    partial void OnCampFollowUpFinancialNoteChanging(string value);
    partial void OnCampFollowUpFinancialNoteChanged();
    partial void OnCampFollowUpFinancialAmmountChanging(decimal value);
    partial void OnCampFollowUpFinancialAmmountChanged();
    partial void OnPlanConfigYearChanging(System.Nullable<short> value);
    partial void OnPlanConfigYearChanged();
    partial void OnTourIdChanging(System.Nullable<short> value);
    partial void OnTourIdChanged();
    partial void OnTeamIdChanging(System.Nullable<short> value);
    partial void OnTeamIdChanged();
    partial void OnCountryIdChanging(System.Nullable<short> value);
    partial void OnCountryIdChanged();
    partial void OnCampIdChanging(System.Nullable<short> value);
    partial void OnCampIdChanged();
    partial void OnSponsorIdChanging(System.Nullable<short> value);
    partial void OnSponsorIdChanged();
    partial void OnCampStatusIdChanging(System.Nullable<short> value);
    partial void OnCampStatusIdChanged();
    partial void OnCampFollowUpFinancialDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnCampFollowUpFinancialDateInChanged();
    partial void OnCampFollowUpFinancialAddByChanging(string value);
    partial void OnCampFollowUpFinancialAddByChanged();
    partial void OnCampFollowUpFinancialUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCampFollowUpFinancialUpdatedDateChanged();
    partial void OnCampFollowUpFinancialUpdatedByChanging(string value);
    partial void OnCampFollowUpFinancialUpdatedByChanged();
    partial void OnCampFollowUpFinancialStatusChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpFinancialStatusChanged();
    partial void OnCampFollowUpFinancialIsClosedChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpFinancialIsClosedChanged();
    #endregion
		
		public CampFollowUpFinancialModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this.OnFollowUpStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusId = value;
					this.SendPropertyChanged("FollowUpStatusId");
					this.OnFollowUpStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CampFollowUpFinancialDate
		{
			get
			{
				return this._CampFollowUpFinancialDate;
			}
			set
			{
				if ((this._CampFollowUpFinancialDate != value))
				{
					this.OnCampFollowUpFinancialDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialDate = value;
					this.SendPropertyChanged("CampFollowUpFinancialDate");
					this.OnCampFollowUpFinancialDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CampFollowUpFinancialNote
		{
			get
			{
				return this._CampFollowUpFinancialNote;
			}
			set
			{
				if ((this._CampFollowUpFinancialNote != value))
				{
					this.OnCampFollowUpFinancialNoteChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialNote = value;
					this.SendPropertyChanged("CampFollowUpFinancialNote");
					this.OnCampFollowUpFinancialNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialAmmount", DbType="Money NOT NULL", IsPrimaryKey=true)]
		public decimal CampFollowUpFinancialAmmount
		{
			get
			{
				return this._CampFollowUpFinancialAmmount;
			}
			set
			{
				if ((this._CampFollowUpFinancialAmmount != value))
				{
					this.OnCampFollowUpFinancialAmmountChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialAmmount = value;
					this.SendPropertyChanged("CampFollowUpFinancialAmmount");
					this.OnCampFollowUpFinancialAmmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt")]
		public System.Nullable<short> PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this.OnPlanConfigYearChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigYear = value;
					this.SendPropertyChanged("PlanConfigYear");
					this.OnPlanConfigYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt")]
		public System.Nullable<short> TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt")]
		public System.Nullable<short> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt")]
		public System.Nullable<short> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt")]
		public System.Nullable<short> CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt")]
		public System.Nullable<short> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt")]
		public System.Nullable<short> CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpFinancialDateIn
		{
			get
			{
				return this._CampFollowUpFinancialDateIn;
			}
			set
			{
				if ((this._CampFollowUpFinancialDateIn != value))
				{
					this.OnCampFollowUpFinancialDateInChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialDateIn = value;
					this.SendPropertyChanged("CampFollowUpFinancialDateIn");
					this.OnCampFollowUpFinancialDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialAddBy", DbType="NVarChar(128)")]
		public string CampFollowUpFinancialAddBy
		{
			get
			{
				return this._CampFollowUpFinancialAddBy;
			}
			set
			{
				if ((this._CampFollowUpFinancialAddBy != value))
				{
					this.OnCampFollowUpFinancialAddByChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialAddBy = value;
					this.SendPropertyChanged("CampFollowUpFinancialAddBy");
					this.OnCampFollowUpFinancialAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpFinancialUpdatedDate
		{
			get
			{
				return this._CampFollowUpFinancialUpdatedDate;
			}
			set
			{
				if ((this._CampFollowUpFinancialUpdatedDate != value))
				{
					this.OnCampFollowUpFinancialUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialUpdatedDate = value;
					this.SendPropertyChanged("CampFollowUpFinancialUpdatedDate");
					this.OnCampFollowUpFinancialUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialUpdatedBy", DbType="NVarChar(128)")]
		public string CampFollowUpFinancialUpdatedBy
		{
			get
			{
				return this._CampFollowUpFinancialUpdatedBy;
			}
			set
			{
				if ((this._CampFollowUpFinancialUpdatedBy != value))
				{
					this.OnCampFollowUpFinancialUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialUpdatedBy = value;
					this.SendPropertyChanged("CampFollowUpFinancialUpdatedBy");
					this.OnCampFollowUpFinancialUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialStatus", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpFinancialStatus
		{
			get
			{
				return this._CampFollowUpFinancialStatus;
			}
			set
			{
				if ((this._CampFollowUpFinancialStatus != value))
				{
					this.OnCampFollowUpFinancialStatusChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialStatus = value;
					this.SendPropertyChanged("CampFollowUpFinancialStatus");
					this.OnCampFollowUpFinancialStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpFinancialIsClosed
		{
			get
			{
				return this._CampFollowUpFinancialIsClosed;
			}
			set
			{
				if ((this._CampFollowUpFinancialIsClosed != value))
				{
					this.OnCampFollowUpFinancialIsClosedChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialIsClosed = value;
					this.SendPropertyChanged("CampFollowUpFinancialIsClosed");
					this.OnCampFollowUpFinancialIsClosedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAttachmentCampFollowUpFinancial")]
	public partial class AttachmentCampFollowUpFinancialModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachmentFinancialId;
		
		private string _AttachmentName;
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpFinancialDate;
		
		private decimal _CampFollowUpFinancialAmmount;
		
		private string _CampFollowUpFinancialNote;
		
		private short _PlanConfigYear;
		
		private short _TourId;
		
		private short _TeamId;
		
		private short _CountryId;
		
		private short _CampId;
		
		private short _SponsorId;
		
		private short _CampStatusId;
		
		private System.Nullable<System.DateTime> _AttachmentCampFollowUpFinancialDateIn;
		
		private string _AttachmentCampFollowUpFinancialAddBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentFinancialIdChanging(int value);
    partial void OnAttachmentFinancialIdChanged();
    partial void OnAttachmentNameChanging(string value);
    partial void OnAttachmentNameChanged();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnFollowUpStatusIdChanging(short value);
    partial void OnFollowUpStatusIdChanged();
    partial void OnCampFollowUpFinancialDateChanging(System.DateTime value);
    partial void OnCampFollowUpFinancialDateChanged();
    partial void OnCampFollowUpFinancialAmmountChanging(decimal value);
    partial void OnCampFollowUpFinancialAmmountChanged();
    partial void OnCampFollowUpFinancialNoteChanging(string value);
    partial void OnCampFollowUpFinancialNoteChanged();
    partial void OnPlanConfigYearChanging(short value);
    partial void OnPlanConfigYearChanged();
    partial void OnTourIdChanging(short value);
    partial void OnTourIdChanged();
    partial void OnTeamIdChanging(short value);
    partial void OnTeamIdChanged();
    partial void OnCountryIdChanging(short value);
    partial void OnCountryIdChanged();
    partial void OnCampIdChanging(short value);
    partial void OnCampIdChanged();
    partial void OnSponsorIdChanging(short value);
    partial void OnSponsorIdChanged();
    partial void OnCampStatusIdChanging(short value);
    partial void OnCampStatusIdChanged();
    partial void OnAttachmentCampFollowUpFinancialDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnAttachmentCampFollowUpFinancialDateInChanged();
    partial void OnAttachmentCampFollowUpFinancialAddByChanging(string value);
    partial void OnAttachmentCampFollowUpFinancialAddByChanged();
    #endregion
		
		public AttachmentCampFollowUpFinancialModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFinancialId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttachmentFinancialId
		{
			get
			{
				return this._AttachmentFinancialId;
			}
			set
			{
				if ((this._AttachmentFinancialId != value))
				{
					this.OnAttachmentFinancialIdChanging(value);
					this.SendPropertyChanging();
					this._AttachmentFinancialId = value;
					this.SendPropertyChanged("AttachmentFinancialId");
					this.OnAttachmentFinancialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					this.OnAttachmentNameChanging(value);
					this.SendPropertyChanging();
					this._AttachmentName = value;
					this.SendPropertyChanged("AttachmentName");
					this.OnAttachmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL")]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL")]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this.OnFollowUpStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusId = value;
					this.SendPropertyChanged("FollowUpStatusId");
					this.OnFollowUpStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialDate", DbType="Date NOT NULL")]
		public System.DateTime CampFollowUpFinancialDate
		{
			get
			{
				return this._CampFollowUpFinancialDate;
			}
			set
			{
				if ((this._CampFollowUpFinancialDate != value))
				{
					this.OnCampFollowUpFinancialDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialDate = value;
					this.SendPropertyChanged("CampFollowUpFinancialDate");
					this.OnCampFollowUpFinancialDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialAmmount", DbType="Money NOT NULL")]
		public decimal CampFollowUpFinancialAmmount
		{
			get
			{
				return this._CampFollowUpFinancialAmmount;
			}
			set
			{
				if ((this._CampFollowUpFinancialAmmount != value))
				{
					this.OnCampFollowUpFinancialAmmountChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialAmmount = value;
					this.SendPropertyChanged("CampFollowUpFinancialAmmount");
					this.OnCampFollowUpFinancialAmmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CampFollowUpFinancialNote
		{
			get
			{
				return this._CampFollowUpFinancialNote;
			}
			set
			{
				if ((this._CampFollowUpFinancialNote != value))
				{
					this.OnCampFollowUpFinancialNoteChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpFinancialNote = value;
					this.SendPropertyChanged("CampFollowUpFinancialNote");
					this.OnCampFollowUpFinancialNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt NOT NULL")]
		public short PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this.OnPlanConfigYearChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigYear = value;
					this.SendPropertyChanged("PlanConfigYear");
					this.OnPlanConfigYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt NOT NULL")]
		public short TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt NOT NULL")]
		public short TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt NOT NULL")]
		public short CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt NOT NULL")]
		public short CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt NOT NULL")]
		public short SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt NOT NULL")]
		public short CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentCampFollowUpFinancialDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttachmentCampFollowUpFinancialDateIn
		{
			get
			{
				return this._AttachmentCampFollowUpFinancialDateIn;
			}
			set
			{
				if ((this._AttachmentCampFollowUpFinancialDateIn != value))
				{
					this.OnAttachmentCampFollowUpFinancialDateInChanging(value);
					this.SendPropertyChanging();
					this._AttachmentCampFollowUpFinancialDateIn = value;
					this.SendPropertyChanged("AttachmentCampFollowUpFinancialDateIn");
					this.OnAttachmentCampFollowUpFinancialDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentCampFollowUpFinancialAddBy", DbType="NVarChar(128)")]
		public string AttachmentCampFollowUpFinancialAddBy
		{
			get
			{
				return this._AttachmentCampFollowUpFinancialAddBy;
			}
			set
			{
				if ((this._AttachmentCampFollowUpFinancialAddBy != value))
				{
					this.OnAttachmentCampFollowUpFinancialAddByChanging(value);
					this.SendPropertyChanging();
					this._AttachmentCampFollowUpFinancialAddBy = value;
					this.SendPropertyChanged("AttachmentCampFollowUpFinancialAddBy");
					this.OnAttachmentCampFollowUpFinancialAddByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGetCampFollowUpFinancialWithAttachment")]
	public partial class vwGetCampFollowUpFinancialWithAttachmentModel
	{
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpFinancialDate;
		
		private string _CampFollowUpFinancialNote;
		
		private System.Nullable<short> _PlanConfigYear;
		
		private System.Nullable<short> _TourId;
		
		private System.Nullable<short> _TeamId;
		
		private System.Nullable<short> _CountryId;
		
		private System.Nullable<short> _CampId;
		
		private System.Nullable<short> _SponsorId;
		
		private System.Nullable<short> _CampStatusId;
		
		private System.Nullable<System.DateTime> _CampFollowUpFinancialDateIn;
		
		private string _CampFollowUpFinancialAddBy;
		
		private System.Nullable<System.DateTime> _CampFollowUpFinancialUpdatedDate;
		
		private string _CampFollowUpFinancialUpdatedBy;
		
		private System.Nullable<bool> _CampFollowUpFinancialStatus;
		
		private System.Nullable<bool> _CampFollowUpFinancialIsClosed;
		
		private System.Nullable<int> _AttachmentFinancialId;
		
		private string _AttachmentName;
		
		private decimal _CampFollowUpFinancialAmmount;
		
		public vwGetCampFollowUpFinancialWithAttachmentModel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL")]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this._PlanConfigId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL")]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this._FollowUpStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialDate", DbType="Date NOT NULL")]
		public System.DateTime CampFollowUpFinancialDate
		{
			get
			{
				return this._CampFollowUpFinancialDate;
			}
			set
			{
				if ((this._CampFollowUpFinancialDate != value))
				{
					this._CampFollowUpFinancialDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CampFollowUpFinancialNote
		{
			get
			{
				return this._CampFollowUpFinancialNote;
			}
			set
			{
				if ((this._CampFollowUpFinancialNote != value))
				{
					this._CampFollowUpFinancialNote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt")]
		public System.Nullable<short> PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this._PlanConfigYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt")]
		public System.Nullable<short> TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this._TourId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt")]
		public System.Nullable<short> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this._TeamId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt")]
		public System.Nullable<short> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt")]
		public System.Nullable<short> CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this._CampId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt")]
		public System.Nullable<short> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this._SponsorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt")]
		public System.Nullable<short> CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this._CampStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpFinancialDateIn
		{
			get
			{
				return this._CampFollowUpFinancialDateIn;
			}
			set
			{
				if ((this._CampFollowUpFinancialDateIn != value))
				{
					this._CampFollowUpFinancialDateIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialAddBy", DbType="NVarChar(128)")]
		public string CampFollowUpFinancialAddBy
		{
			get
			{
				return this._CampFollowUpFinancialAddBy;
			}
			set
			{
				if ((this._CampFollowUpFinancialAddBy != value))
				{
					this._CampFollowUpFinancialAddBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpFinancialUpdatedDate
		{
			get
			{
				return this._CampFollowUpFinancialUpdatedDate;
			}
			set
			{
				if ((this._CampFollowUpFinancialUpdatedDate != value))
				{
					this._CampFollowUpFinancialUpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialUpdatedBy", DbType="NVarChar(128)")]
		public string CampFollowUpFinancialUpdatedBy
		{
			get
			{
				return this._CampFollowUpFinancialUpdatedBy;
			}
			set
			{
				if ((this._CampFollowUpFinancialUpdatedBy != value))
				{
					this._CampFollowUpFinancialUpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialStatus", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpFinancialStatus
		{
			get
			{
				return this._CampFollowUpFinancialStatus;
			}
			set
			{
				if ((this._CampFollowUpFinancialStatus != value))
				{
					this._CampFollowUpFinancialStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpFinancialIsClosed
		{
			get
			{
				return this._CampFollowUpFinancialIsClosed;
			}
			set
			{
				if ((this._CampFollowUpFinancialIsClosed != value))
				{
					this._CampFollowUpFinancialIsClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentFinancialId", DbType="Int")]
		public System.Nullable<int> AttachmentFinancialId
		{
			get
			{
				return this._AttachmentFinancialId;
			}
			set
			{
				if ((this._AttachmentFinancialId != value))
				{
					this._AttachmentFinancialId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="NVarChar(128)")]
		public string AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					this._AttachmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpFinancialAmmount", DbType="Money NOT NULL")]
		public decimal CampFollowUpFinancialAmmount
		{
			get
			{
				return this._CampFollowUpFinancialAmmount;
			}
			set
			{
				if ((this._CampFollowUpFinancialAmmount != value))
				{
					this._CampFollowUpFinancialAmmount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCampFollowUpAdministrative")]
	public partial class CampFollowUpAdministrativeModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpAdministrativeDate;
		
		private string _CampFollowUpAdministrativeNote;
		
		private System.Nullable<short> _PlanConfigYear;
		
		private System.Nullable<short> _TourId;
		
		private System.Nullable<short> _TeamId;
		
		private System.Nullable<short> _CountryId;
		
		private System.Nullable<short> _CampId;
		
		private System.Nullable<short> _SponsorId;
		
		private System.Nullable<short> _CampStatusId;
		
		private System.Nullable<System.DateTime> _CampFollowUpAdministrativeDateIn;
		
		private string _CampFollowUpAdministrativeAddBy;
		
		private System.Nullable<System.DateTime> _CampFollowUpAdministrativeUpdatedDate;
		
		private string _CampFollowUpAdministrativeUpdatedBy;
		
		private System.Nullable<bool> _CampFollowUpAdministrativeStatus;
		
		private System.Nullable<bool> _CampFollowUpAdministrativeIsClosed;
		
		private System.Nullable<bool> _CampFollowUpAdministrativeIsSignature;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnFollowUpStatusIdChanging(short value);
    partial void OnFollowUpStatusIdChanged();
    partial void OnCampFollowUpAdministrativeDateChanging(System.DateTime value);
    partial void OnCampFollowUpAdministrativeDateChanged();
    partial void OnCampFollowUpAdministrativeNoteChanging(string value);
    partial void OnCampFollowUpAdministrativeNoteChanged();
    partial void OnPlanConfigYearChanging(System.Nullable<short> value);
    partial void OnPlanConfigYearChanged();
    partial void OnTourIdChanging(System.Nullable<short> value);
    partial void OnTourIdChanged();
    partial void OnTeamIdChanging(System.Nullable<short> value);
    partial void OnTeamIdChanged();
    partial void OnCountryIdChanging(System.Nullable<short> value);
    partial void OnCountryIdChanged();
    partial void OnCampIdChanging(System.Nullable<short> value);
    partial void OnCampIdChanged();
    partial void OnSponsorIdChanging(System.Nullable<short> value);
    partial void OnSponsorIdChanged();
    partial void OnCampStatusIdChanging(System.Nullable<short> value);
    partial void OnCampStatusIdChanged();
    partial void OnCampFollowUpAdministrativeDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnCampFollowUpAdministrativeDateInChanged();
    partial void OnCampFollowUpAdministrativeAddByChanging(string value);
    partial void OnCampFollowUpAdministrativeAddByChanged();
    partial void OnCampFollowUpAdministrativeUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCampFollowUpAdministrativeUpdatedDateChanged();
    partial void OnCampFollowUpAdministrativeUpdatedByChanging(string value);
    partial void OnCampFollowUpAdministrativeUpdatedByChanged();
    partial void OnCampFollowUpAdministrativeStatusChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpAdministrativeStatusChanged();
    partial void OnCampFollowUpAdministrativeIsClosedChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpAdministrativeIsClosedChanged();
    partial void OnCampFollowUpAdministrativeIsSignatureChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpAdministrativeIsSignatureChanged();
    #endregion
		
		public CampFollowUpAdministrativeModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this.OnFollowUpStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusId = value;
					this.SendPropertyChanged("FollowUpStatusId");
					this.OnFollowUpStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CampFollowUpAdministrativeDate
		{
			get
			{
				return this._CampFollowUpAdministrativeDate;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeDate != value))
				{
					this.OnCampFollowUpAdministrativeDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeDate = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeDate");
					this.OnCampFollowUpAdministrativeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CampFollowUpAdministrativeNote
		{
			get
			{
				return this._CampFollowUpAdministrativeNote;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeNote != value))
				{
					this.OnCampFollowUpAdministrativeNoteChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeNote = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeNote");
					this.OnCampFollowUpAdministrativeNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt")]
		public System.Nullable<short> PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this.OnPlanConfigYearChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigYear = value;
					this.SendPropertyChanged("PlanConfigYear");
					this.OnPlanConfigYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt")]
		public System.Nullable<short> TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt")]
		public System.Nullable<short> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt")]
		public System.Nullable<short> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt")]
		public System.Nullable<short> CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt")]
		public System.Nullable<short> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt")]
		public System.Nullable<short> CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpAdministrativeDateIn
		{
			get
			{
				return this._CampFollowUpAdministrativeDateIn;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeDateIn != value))
				{
					this.OnCampFollowUpAdministrativeDateInChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeDateIn = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeDateIn");
					this.OnCampFollowUpAdministrativeDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeAddBy", DbType="NVarChar(128)")]
		public string CampFollowUpAdministrativeAddBy
		{
			get
			{
				return this._CampFollowUpAdministrativeAddBy;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeAddBy != value))
				{
					this.OnCampFollowUpAdministrativeAddByChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeAddBy = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeAddBy");
					this.OnCampFollowUpAdministrativeAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpAdministrativeUpdatedDate
		{
			get
			{
				return this._CampFollowUpAdministrativeUpdatedDate;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeUpdatedDate != value))
				{
					this.OnCampFollowUpAdministrativeUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeUpdatedDate = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeUpdatedDate");
					this.OnCampFollowUpAdministrativeUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeUpdatedBy", DbType="NVarChar(128)")]
		public string CampFollowUpAdministrativeUpdatedBy
		{
			get
			{
				return this._CampFollowUpAdministrativeUpdatedBy;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeUpdatedBy != value))
				{
					this.OnCampFollowUpAdministrativeUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeUpdatedBy = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeUpdatedBy");
					this.OnCampFollowUpAdministrativeUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeStatus", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpAdministrativeStatus
		{
			get
			{
				return this._CampFollowUpAdministrativeStatus;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeStatus != value))
				{
					this.OnCampFollowUpAdministrativeStatusChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeStatus = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeStatus");
					this.OnCampFollowUpAdministrativeStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpAdministrativeIsClosed
		{
			get
			{
				return this._CampFollowUpAdministrativeIsClosed;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeIsClosed != value))
				{
					this.OnCampFollowUpAdministrativeIsClosedChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeIsClosed = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeIsClosed");
					this.OnCampFollowUpAdministrativeIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeIsSignature", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpAdministrativeIsSignature
		{
			get
			{
				return this._CampFollowUpAdministrativeIsSignature;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeIsSignature != value))
				{
					this.OnCampFollowUpAdministrativeIsSignatureChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeIsSignature = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeIsSignature");
					this.OnCampFollowUpAdministrativeIsSignatureChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAttachmentCampFollowUpAdministrative")]
	public partial class AttachmentCampFollowUpAdministrativeModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachmentAdministrativeId;
		
		private string _AttachmentName;
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpAdministrativeDate;
		
		private string _CampFollowUpAdministrativeNote;
		
		private System.Nullable<bool> _CampFollowUpAdministrativeIsSignature;
		
		private System.Nullable<bool> _CampFollowUpAdministrativeIsClosed;
		
		private short _PlanConfigYear;
		
		private short _TourId;
		
		private short _TeamId;
		
		private short _CountryId;
		
		private short _CampId;
		
		private short _SponsorId;
		
		private short _CampStatusId;
		
		private System.Nullable<System.DateTime> _AttachmentCampFollowUpAdministrativeDateIn;
		
		private string _AttachmentCampFollowUpAdministrativeAddBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentAdministrativeIdChanging(int value);
    partial void OnAttachmentAdministrativeIdChanged();
    partial void OnAttachmentNameChanging(string value);
    partial void OnAttachmentNameChanged();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnFollowUpStatusIdChanging(short value);
    partial void OnFollowUpStatusIdChanged();
    partial void OnCampFollowUpAdministrativeDateChanging(System.DateTime value);
    partial void OnCampFollowUpAdministrativeDateChanged();
    partial void OnCampFollowUpAdministrativeNoteChanging(string value);
    partial void OnCampFollowUpAdministrativeNoteChanged();
    partial void OnCampFollowUpAdministrativeIsSignatureChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpAdministrativeIsSignatureChanged();
    partial void OnCampFollowUpAdministrativeIsClosedChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpAdministrativeIsClosedChanged();
    partial void OnPlanConfigYearChanging(short value);
    partial void OnPlanConfigYearChanged();
    partial void OnTourIdChanging(short value);
    partial void OnTourIdChanged();
    partial void OnTeamIdChanging(short value);
    partial void OnTeamIdChanged();
    partial void OnCountryIdChanging(short value);
    partial void OnCountryIdChanged();
    partial void OnCampIdChanging(short value);
    partial void OnCampIdChanged();
    partial void OnSponsorIdChanging(short value);
    partial void OnSponsorIdChanged();
    partial void OnCampStatusIdChanging(short value);
    partial void OnCampStatusIdChanged();
    partial void OnAttachmentCampFollowUpAdministrativeDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnAttachmentCampFollowUpAdministrativeDateInChanged();
    partial void OnAttachmentCampFollowUpAdministrativeAddByChanging(string value);
    partial void OnAttachmentCampFollowUpAdministrativeAddByChanged();
    #endregion
		
		public AttachmentCampFollowUpAdministrativeModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentAdministrativeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttachmentAdministrativeId
		{
			get
			{
				return this._AttachmentAdministrativeId;
			}
			set
			{
				if ((this._AttachmentAdministrativeId != value))
				{
					this.OnAttachmentAdministrativeIdChanging(value);
					this.SendPropertyChanging();
					this._AttachmentAdministrativeId = value;
					this.SendPropertyChanged("AttachmentAdministrativeId");
					this.OnAttachmentAdministrativeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					this.OnAttachmentNameChanging(value);
					this.SendPropertyChanging();
					this._AttachmentName = value;
					this.SendPropertyChanged("AttachmentName");
					this.OnAttachmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL")]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL")]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this.OnFollowUpStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusId = value;
					this.SendPropertyChanged("FollowUpStatusId");
					this.OnFollowUpStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeDate", DbType="Date NOT NULL")]
		public System.DateTime CampFollowUpAdministrativeDate
		{
			get
			{
				return this._CampFollowUpAdministrativeDate;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeDate != value))
				{
					this.OnCampFollowUpAdministrativeDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeDate = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeDate");
					this.OnCampFollowUpAdministrativeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CampFollowUpAdministrativeNote
		{
			get
			{
				return this._CampFollowUpAdministrativeNote;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeNote != value))
				{
					this.OnCampFollowUpAdministrativeNoteChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeNote = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeNote");
					this.OnCampFollowUpAdministrativeNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeIsSignature", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpAdministrativeIsSignature
		{
			get
			{
				return this._CampFollowUpAdministrativeIsSignature;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeIsSignature != value))
				{
					this.OnCampFollowUpAdministrativeIsSignatureChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeIsSignature = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeIsSignature");
					this.OnCampFollowUpAdministrativeIsSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpAdministrativeIsClosed
		{
			get
			{
				return this._CampFollowUpAdministrativeIsClosed;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeIsClosed != value))
				{
					this.OnCampFollowUpAdministrativeIsClosedChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpAdministrativeIsClosed = value;
					this.SendPropertyChanged("CampFollowUpAdministrativeIsClosed");
					this.OnCampFollowUpAdministrativeIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt NOT NULL")]
		public short PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this.OnPlanConfigYearChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigYear = value;
					this.SendPropertyChanged("PlanConfigYear");
					this.OnPlanConfigYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt NOT NULL")]
		public short TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt NOT NULL")]
		public short TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt NOT NULL")]
		public short CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt NOT NULL")]
		public short CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt NOT NULL")]
		public short SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt NOT NULL")]
		public short CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentCampFollowUpAdministrativeDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttachmentCampFollowUpAdministrativeDateIn
		{
			get
			{
				return this._AttachmentCampFollowUpAdministrativeDateIn;
			}
			set
			{
				if ((this._AttachmentCampFollowUpAdministrativeDateIn != value))
				{
					this.OnAttachmentCampFollowUpAdministrativeDateInChanging(value);
					this.SendPropertyChanging();
					this._AttachmentCampFollowUpAdministrativeDateIn = value;
					this.SendPropertyChanged("AttachmentCampFollowUpAdministrativeDateIn");
					this.OnAttachmentCampFollowUpAdministrativeDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentCampFollowUpAdministrativeAddBy", DbType="NVarChar(128)")]
		public string AttachmentCampFollowUpAdministrativeAddBy
		{
			get
			{
				return this._AttachmentCampFollowUpAdministrativeAddBy;
			}
			set
			{
				if ((this._AttachmentCampFollowUpAdministrativeAddBy != value))
				{
					this.OnAttachmentCampFollowUpAdministrativeAddByChanging(value);
					this.SendPropertyChanging();
					this._AttachmentCampFollowUpAdministrativeAddBy = value;
					this.SendPropertyChanged("AttachmentCampFollowUpAdministrativeAddBy");
					this.OnAttachmentCampFollowUpAdministrativeAddByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGetCampFollowUpAdministrativeWithAttachment")]
	public partial class vwGetCampFollowUpAdministrativeWithAttachmentModel
	{
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpAdministrativeDate;
		
		private string _CampFollowUpAdministrativeNote;
		
		private System.Nullable<short> _PlanConfigYear;
		
		private System.Nullable<short> _TourId;
		
		private System.Nullable<short> _TeamId;
		
		private System.Nullable<short> _CountryId;
		
		private System.Nullable<short> _CampId;
		
		private System.Nullable<short> _SponsorId;
		
		private System.Nullable<short> _CampStatusId;
		
		private System.Nullable<System.DateTime> _CampFollowUpAdministrativeDateIn;
		
		private string _CampFollowUpAdministrativeAddBy;
		
		private System.Nullable<System.DateTime> _CampFollowUpAdministrativeUpdatedDate;
		
		private string _CampFollowUpAdministrativeUpdatedBy;
		
		private System.Nullable<bool> _CampFollowUpAdministrativeStatus;
		
		private System.Nullable<bool> _CampFollowUpAdministrativeIsClosed;
		
		private System.Nullable<int> _AttachmentAdministrativeId;
		
		private string _AttachmentName;
		
		private System.Nullable<bool> _CampFollowUpAdministrativeIsSignature;
		
		public vwGetCampFollowUpAdministrativeWithAttachmentModel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL")]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this._PlanConfigId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL")]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this._FollowUpStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeDate", DbType="Date NOT NULL")]
		public System.DateTime CampFollowUpAdministrativeDate
		{
			get
			{
				return this._CampFollowUpAdministrativeDate;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeDate != value))
				{
					this._CampFollowUpAdministrativeDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CampFollowUpAdministrativeNote
		{
			get
			{
				return this._CampFollowUpAdministrativeNote;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeNote != value))
				{
					this._CampFollowUpAdministrativeNote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt")]
		public System.Nullable<short> PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this._PlanConfigYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt")]
		public System.Nullable<short> TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this._TourId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt")]
		public System.Nullable<short> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this._TeamId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt")]
		public System.Nullable<short> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt")]
		public System.Nullable<short> CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this._CampId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt")]
		public System.Nullable<short> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this._SponsorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt")]
		public System.Nullable<short> CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this._CampStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpAdministrativeDateIn
		{
			get
			{
				return this._CampFollowUpAdministrativeDateIn;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeDateIn != value))
				{
					this._CampFollowUpAdministrativeDateIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeAddBy", DbType="NVarChar(128)")]
		public string CampFollowUpAdministrativeAddBy
		{
			get
			{
				return this._CampFollowUpAdministrativeAddBy;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeAddBy != value))
				{
					this._CampFollowUpAdministrativeAddBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpAdministrativeUpdatedDate
		{
			get
			{
				return this._CampFollowUpAdministrativeUpdatedDate;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeUpdatedDate != value))
				{
					this._CampFollowUpAdministrativeUpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeUpdatedBy", DbType="NVarChar(128)")]
		public string CampFollowUpAdministrativeUpdatedBy
		{
			get
			{
				return this._CampFollowUpAdministrativeUpdatedBy;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeUpdatedBy != value))
				{
					this._CampFollowUpAdministrativeUpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeStatus", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpAdministrativeStatus
		{
			get
			{
				return this._CampFollowUpAdministrativeStatus;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeStatus != value))
				{
					this._CampFollowUpAdministrativeStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpAdministrativeIsClosed
		{
			get
			{
				return this._CampFollowUpAdministrativeIsClosed;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeIsClosed != value))
				{
					this._CampFollowUpAdministrativeIsClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentAdministrativeId", DbType="Int")]
		public System.Nullable<int> AttachmentAdministrativeId
		{
			get
			{
				return this._AttachmentAdministrativeId;
			}
			set
			{
				if ((this._AttachmentAdministrativeId != value))
				{
					this._AttachmentAdministrativeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="NVarChar(128)")]
		public string AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					this._AttachmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpAdministrativeIsSignature", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpAdministrativeIsSignature
		{
			get
			{
				return this._CampFollowUpAdministrativeIsSignature;
			}
			set
			{
				if ((this._CampFollowUpAdministrativeIsSignature != value))
				{
					this._CampFollowUpAdministrativeIsSignature = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAttachmentCampFollowUpMedia")]
	public partial class AttachmentCampFollowUpMediaModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachmentMediaId;
		
		private string _AttachmentName;
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpMediaDate;
		
		private string _CampFollowUpMediaNote;
		
		private string _CampFollowUpMediaDropboxLink;
		
		private System.Nullable<bool> _CampFollowUpMediaIsClosed;
		
		private short _PlanConfigYear;
		
		private short _TourId;
		
		private short _TeamId;
		
		private short _CountryId;
		
		private short _CampId;
		
		private short _SponsorId;
		
		private short _CampStatusId;
		
		private System.Nullable<System.DateTime> _AttachmentCampFollowUpMediaDateIn;
		
		private string _AttachmentCampFollowUpMediaAddBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentMediaIdChanging(int value);
    partial void OnAttachmentMediaIdChanged();
    partial void OnAttachmentNameChanging(string value);
    partial void OnAttachmentNameChanged();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnFollowUpStatusIdChanging(short value);
    partial void OnFollowUpStatusIdChanged();
    partial void OnCampFollowUpMediaDateChanging(System.DateTime value);
    partial void OnCampFollowUpMediaDateChanged();
    partial void OnCampFollowUpMediaNoteChanging(string value);
    partial void OnCampFollowUpMediaNoteChanged();
    partial void OnCampFollowUpMediaDropboxLinkChanging(string value);
    partial void OnCampFollowUpMediaDropboxLinkChanged();
    partial void OnCampFollowUpMediaIsClosedChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpMediaIsClosedChanged();
    partial void OnPlanConfigYearChanging(short value);
    partial void OnPlanConfigYearChanged();
    partial void OnTourIdChanging(short value);
    partial void OnTourIdChanged();
    partial void OnTeamIdChanging(short value);
    partial void OnTeamIdChanged();
    partial void OnCountryIdChanging(short value);
    partial void OnCountryIdChanged();
    partial void OnCampIdChanging(short value);
    partial void OnCampIdChanged();
    partial void OnSponsorIdChanging(short value);
    partial void OnSponsorIdChanged();
    partial void OnCampStatusIdChanging(short value);
    partial void OnCampStatusIdChanged();
    partial void OnAttachmentCampFollowUpMediaDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnAttachmentCampFollowUpMediaDateInChanged();
    partial void OnAttachmentCampFollowUpMediaAddByChanging(string value);
    partial void OnAttachmentCampFollowUpMediaAddByChanged();
    #endregion
		
		public AttachmentCampFollowUpMediaModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentMediaId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttachmentMediaId
		{
			get
			{
				return this._AttachmentMediaId;
			}
			set
			{
				if ((this._AttachmentMediaId != value))
				{
					this.OnAttachmentMediaIdChanging(value);
					this.SendPropertyChanging();
					this._AttachmentMediaId = value;
					this.SendPropertyChanged("AttachmentMediaId");
					this.OnAttachmentMediaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					this.OnAttachmentNameChanging(value);
					this.SendPropertyChanging();
					this._AttachmentName = value;
					this.SendPropertyChanged("AttachmentName");
					this.OnAttachmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL")]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL")]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this.OnFollowUpStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusId = value;
					this.SendPropertyChanged("FollowUpStatusId");
					this.OnFollowUpStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaDate", DbType="Date NOT NULL")]
		public System.DateTime CampFollowUpMediaDate
		{
			get
			{
				return this._CampFollowUpMediaDate;
			}
			set
			{
				if ((this._CampFollowUpMediaDate != value))
				{
					this.OnCampFollowUpMediaDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaDate = value;
					this.SendPropertyChanged("CampFollowUpMediaDate");
					this.OnCampFollowUpMediaDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CampFollowUpMediaNote
		{
			get
			{
				return this._CampFollowUpMediaNote;
			}
			set
			{
				if ((this._CampFollowUpMediaNote != value))
				{
					this.OnCampFollowUpMediaNoteChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaNote = value;
					this.SendPropertyChanged("CampFollowUpMediaNote");
					this.OnCampFollowUpMediaNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaDropboxLink", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CampFollowUpMediaDropboxLink
		{
			get
			{
				return this._CampFollowUpMediaDropboxLink;
			}
			set
			{
				if ((this._CampFollowUpMediaDropboxLink != value))
				{
					this.OnCampFollowUpMediaDropboxLinkChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaDropboxLink = value;
					this.SendPropertyChanged("CampFollowUpMediaDropboxLink");
					this.OnCampFollowUpMediaDropboxLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpMediaIsClosed
		{
			get
			{
				return this._CampFollowUpMediaIsClosed;
			}
			set
			{
				if ((this._CampFollowUpMediaIsClosed != value))
				{
					this.OnCampFollowUpMediaIsClosedChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaIsClosed = value;
					this.SendPropertyChanged("CampFollowUpMediaIsClosed");
					this.OnCampFollowUpMediaIsClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt NOT NULL")]
		public short PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this.OnPlanConfigYearChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigYear = value;
					this.SendPropertyChanged("PlanConfigYear");
					this.OnPlanConfigYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt NOT NULL")]
		public short TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt NOT NULL")]
		public short TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt NOT NULL")]
		public short CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt NOT NULL")]
		public short CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt NOT NULL")]
		public short SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt NOT NULL")]
		public short CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentCampFollowUpMediaDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> AttachmentCampFollowUpMediaDateIn
		{
			get
			{
				return this._AttachmentCampFollowUpMediaDateIn;
			}
			set
			{
				if ((this._AttachmentCampFollowUpMediaDateIn != value))
				{
					this.OnAttachmentCampFollowUpMediaDateInChanging(value);
					this.SendPropertyChanging();
					this._AttachmentCampFollowUpMediaDateIn = value;
					this.SendPropertyChanged("AttachmentCampFollowUpMediaDateIn");
					this.OnAttachmentCampFollowUpMediaDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentCampFollowUpMediaAddBy", DbType="NVarChar(128)")]
		public string AttachmentCampFollowUpMediaAddBy
		{
			get
			{
				return this._AttachmentCampFollowUpMediaAddBy;
			}
			set
			{
				if ((this._AttachmentCampFollowUpMediaAddBy != value))
				{
					this.OnAttachmentCampFollowUpMediaAddByChanging(value);
					this.SendPropertyChanging();
					this._AttachmentCampFollowUpMediaAddBy = value;
					this.SendPropertyChanged("AttachmentCampFollowUpMediaAddBy");
					this.OnAttachmentCampFollowUpMediaAddByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCampFollowUpMedia")]
	public partial class CampFollowUpMediaModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpMediaDate;
		
		private string _CampFollowUpMediaNote;
		
		private string _CampFollowUpMediaDropboxLink;
		
		private System.Nullable<short> _PlanConfigYear;
		
		private System.Nullable<short> _TourId;
		
		private System.Nullable<short> _TeamId;
		
		private System.Nullable<short> _CountryId;
		
		private System.Nullable<short> _CampId;
		
		private System.Nullable<short> _SponsorId;
		
		private System.Nullable<short> _CampStatusId;
		
		private System.Nullable<System.DateTime> _CampFollowUpMediaDateIn;
		
		private string _CampFollowUpMediaAddBy;
		
		private System.Nullable<System.DateTime> _CampFollowUpMediaUpdatedDate;
		
		private string _CampFollowUpMediaUpdatedBy;
		
		private System.Nullable<bool> _CampFollowUpMediaStatus;
		
		private System.Nullable<bool> _CampFollowUpMediaIsClosed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnFollowUpStatusIdChanging(short value);
    partial void OnFollowUpStatusIdChanged();
    partial void OnCampFollowUpMediaDateChanging(System.DateTime value);
    partial void OnCampFollowUpMediaDateChanged();
    partial void OnCampFollowUpMediaNoteChanging(string value);
    partial void OnCampFollowUpMediaNoteChanged();
    partial void OnCampFollowUpMediaDropboxLinkChanging(string value);
    partial void OnCampFollowUpMediaDropboxLinkChanged();
    partial void OnPlanConfigYearChanging(System.Nullable<short> value);
    partial void OnPlanConfigYearChanged();
    partial void OnTourIdChanging(System.Nullable<short> value);
    partial void OnTourIdChanged();
    partial void OnTeamIdChanging(System.Nullable<short> value);
    partial void OnTeamIdChanged();
    partial void OnCountryIdChanging(System.Nullable<short> value);
    partial void OnCountryIdChanged();
    partial void OnCampIdChanging(System.Nullable<short> value);
    partial void OnCampIdChanged();
    partial void OnSponsorIdChanging(System.Nullable<short> value);
    partial void OnSponsorIdChanged();
    partial void OnCampStatusIdChanging(System.Nullable<short> value);
    partial void OnCampStatusIdChanged();
    partial void OnCampFollowUpMediaDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnCampFollowUpMediaDateInChanged();
    partial void OnCampFollowUpMediaAddByChanging(string value);
    partial void OnCampFollowUpMediaAddByChanged();
    partial void OnCampFollowUpMediaUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCampFollowUpMediaUpdatedDateChanged();
    partial void OnCampFollowUpMediaUpdatedByChanging(string value);
    partial void OnCampFollowUpMediaUpdatedByChanged();
    partial void OnCampFollowUpMediaStatusChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpMediaStatusChanged();
    partial void OnCampFollowUpMediaIsClosedChanging(System.Nullable<bool> value);
    partial void OnCampFollowUpMediaIsClosedChanged();
    #endregion
		
		public CampFollowUpMediaModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this.OnFollowUpStatusIdChanging(value);
					this.SendPropertyChanging();
					this._FollowUpStatusId = value;
					this.SendPropertyChanged("FollowUpStatusId");
					this.OnFollowUpStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CampFollowUpMediaDate
		{
			get
			{
				return this._CampFollowUpMediaDate;
			}
			set
			{
				if ((this._CampFollowUpMediaDate != value))
				{
					this.OnCampFollowUpMediaDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaDate = value;
					this.SendPropertyChanged("CampFollowUpMediaDate");
					this.OnCampFollowUpMediaDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CampFollowUpMediaNote
		{
			get
			{
				return this._CampFollowUpMediaNote;
			}
			set
			{
				if ((this._CampFollowUpMediaNote != value))
				{
					this.OnCampFollowUpMediaNoteChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaNote = value;
					this.SendPropertyChanged("CampFollowUpMediaNote");
					this.OnCampFollowUpMediaNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaDropboxLink", DbType="NVarChar(200)")]
		public string CampFollowUpMediaDropboxLink
		{
			get
			{
				return this._CampFollowUpMediaDropboxLink;
			}
			set
			{
				if ((this._CampFollowUpMediaDropboxLink != value))
				{
					this.OnCampFollowUpMediaDropboxLinkChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaDropboxLink = value;
					this.SendPropertyChanged("CampFollowUpMediaDropboxLink");
					this.OnCampFollowUpMediaDropboxLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt")]
		public System.Nullable<short> PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this.OnPlanConfigYearChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigYear = value;
					this.SendPropertyChanged("PlanConfigYear");
					this.OnPlanConfigYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt")]
		public System.Nullable<short> TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this.OnTourIdChanging(value);
					this.SendPropertyChanging();
					this._TourId = value;
					this.SendPropertyChanged("TourId");
					this.OnTourIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt")]
		public System.Nullable<short> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this.OnTeamIdChanging(value);
					this.SendPropertyChanging();
					this._TeamId = value;
					this.SendPropertyChanged("TeamId");
					this.OnTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt")]
		public System.Nullable<short> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this.OnCountryIdChanging(value);
					this.SendPropertyChanging();
					this._CountryId = value;
					this.SendPropertyChanged("CountryId");
					this.OnCountryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt")]
		public System.Nullable<short> CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this.OnCampIdChanging(value);
					this.SendPropertyChanging();
					this._CampId = value;
					this.SendPropertyChanged("CampId");
					this.OnCampIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt")]
		public System.Nullable<short> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt")]
		public System.Nullable<short> CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this.OnCampStatusIdChanging(value);
					this.SendPropertyChanging();
					this._CampStatusId = value;
					this.SendPropertyChanged("CampStatusId");
					this.OnCampStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpMediaDateIn
		{
			get
			{
				return this._CampFollowUpMediaDateIn;
			}
			set
			{
				if ((this._CampFollowUpMediaDateIn != value))
				{
					this.OnCampFollowUpMediaDateInChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaDateIn = value;
					this.SendPropertyChanged("CampFollowUpMediaDateIn");
					this.OnCampFollowUpMediaDateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaAddBy", DbType="NVarChar(128)")]
		public string CampFollowUpMediaAddBy
		{
			get
			{
				return this._CampFollowUpMediaAddBy;
			}
			set
			{
				if ((this._CampFollowUpMediaAddBy != value))
				{
					this.OnCampFollowUpMediaAddByChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaAddBy = value;
					this.SendPropertyChanged("CampFollowUpMediaAddBy");
					this.OnCampFollowUpMediaAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpMediaUpdatedDate
		{
			get
			{
				return this._CampFollowUpMediaUpdatedDate;
			}
			set
			{
				if ((this._CampFollowUpMediaUpdatedDate != value))
				{
					this.OnCampFollowUpMediaUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaUpdatedDate = value;
					this.SendPropertyChanged("CampFollowUpMediaUpdatedDate");
					this.OnCampFollowUpMediaUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaUpdatedBy", DbType="NVarChar(128)")]
		public string CampFollowUpMediaUpdatedBy
		{
			get
			{
				return this._CampFollowUpMediaUpdatedBy;
			}
			set
			{
				if ((this._CampFollowUpMediaUpdatedBy != value))
				{
					this.OnCampFollowUpMediaUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaUpdatedBy = value;
					this.SendPropertyChanged("CampFollowUpMediaUpdatedBy");
					this.OnCampFollowUpMediaUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaStatus", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpMediaStatus
		{
			get
			{
				return this._CampFollowUpMediaStatus;
			}
			set
			{
				if ((this._CampFollowUpMediaStatus != value))
				{
					this.OnCampFollowUpMediaStatusChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaStatus = value;
					this.SendPropertyChanged("CampFollowUpMediaStatus");
					this.OnCampFollowUpMediaStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpMediaIsClosed
		{
			get
			{
				return this._CampFollowUpMediaIsClosed;
			}
			set
			{
				if ((this._CampFollowUpMediaIsClosed != value))
				{
					this.OnCampFollowUpMediaIsClosedChanging(value);
					this.SendPropertyChanging();
					this._CampFollowUpMediaIsClosed = value;
					this.SendPropertyChanged("CampFollowUpMediaIsClosed");
					this.OnCampFollowUpMediaIsClosedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGetCampFollowUpMediaWithAttachment")]
	public partial class vwGetCampFollowUpMediaWithAttachmentModel
	{
		
		private int _PlanConfigId;
		
		private short _FollowUpStatusId;
		
		private System.DateTime _CampFollowUpMediaDate;
		
		private string _CampFollowUpMediaNote;
		
		private System.Nullable<short> _PlanConfigYear;
		
		private System.Nullable<short> _TourId;
		
		private System.Nullable<short> _TeamId;
		
		private System.Nullable<short> _CountryId;
		
		private System.Nullable<short> _CampId;
		
		private System.Nullable<short> _SponsorId;
		
		private System.Nullable<short> _CampStatusId;
		
		private System.Nullable<System.DateTime> _CampFollowUpMediaDateIn;
		
		private string _CampFollowUpMediaAddBy;
		
		private System.Nullable<System.DateTime> _CampFollowUpMediaUpdatedDate;
		
		private string _CampFollowUpMediaUpdatedBy;
		
		private System.Nullable<bool> _CampFollowUpMediaStatus;
		
		private System.Nullable<bool> _CampFollowUpMediaIsClosed;
		
		private System.Nullable<int> _AttachmentMediaId;
		
		private string _AttachmentName;
		
		private string _CampFollowUpMediaDropboxLink;
		
		public vwGetCampFollowUpMediaWithAttachmentModel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL")]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this._PlanConfigId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FollowUpStatusId", DbType="SmallInt NOT NULL")]
		public short FollowUpStatusId
		{
			get
			{
				return this._FollowUpStatusId;
			}
			set
			{
				if ((this._FollowUpStatusId != value))
				{
					this._FollowUpStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaDate", DbType="Date NOT NULL")]
		public System.DateTime CampFollowUpMediaDate
		{
			get
			{
				return this._CampFollowUpMediaDate;
			}
			set
			{
				if ((this._CampFollowUpMediaDate != value))
				{
					this._CampFollowUpMediaDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaNote", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string CampFollowUpMediaNote
		{
			get
			{
				return this._CampFollowUpMediaNote;
			}
			set
			{
				if ((this._CampFollowUpMediaNote != value))
				{
					this._CampFollowUpMediaNote = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigYear", DbType="SmallInt")]
		public System.Nullable<short> PlanConfigYear
		{
			get
			{
				return this._PlanConfigYear;
			}
			set
			{
				if ((this._PlanConfigYear != value))
				{
					this._PlanConfigYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TourId", DbType="SmallInt")]
		public System.Nullable<short> TourId
		{
			get
			{
				return this._TourId;
			}
			set
			{
				if ((this._TourId != value))
				{
					this._TourId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamId", DbType="SmallInt")]
		public System.Nullable<short> TeamId
		{
			get
			{
				return this._TeamId;
			}
			set
			{
				if ((this._TeamId != value))
				{
					this._TeamId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryId", DbType="SmallInt")]
		public System.Nullable<short> CountryId
		{
			get
			{
				return this._CountryId;
			}
			set
			{
				if ((this._CountryId != value))
				{
					this._CountryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampId", DbType="SmallInt")]
		public System.Nullable<short> CampId
		{
			get
			{
				return this._CampId;
			}
			set
			{
				if ((this._CampId != value))
				{
					this._CampId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt")]
		public System.Nullable<short> SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this._SponsorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampStatusId", DbType="SmallInt")]
		public System.Nullable<short> CampStatusId
		{
			get
			{
				return this._CampStatusId;
			}
			set
			{
				if ((this._CampStatusId != value))
				{
					this._CampStatusId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaDateIn", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpMediaDateIn
		{
			get
			{
				return this._CampFollowUpMediaDateIn;
			}
			set
			{
				if ((this._CampFollowUpMediaDateIn != value))
				{
					this._CampFollowUpMediaDateIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaAddBy", DbType="NVarChar(128)")]
		public string CampFollowUpMediaAddBy
		{
			get
			{
				return this._CampFollowUpMediaAddBy;
			}
			set
			{
				if ((this._CampFollowUpMediaAddBy != value))
				{
					this._CampFollowUpMediaAddBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CampFollowUpMediaUpdatedDate
		{
			get
			{
				return this._CampFollowUpMediaUpdatedDate;
			}
			set
			{
				if ((this._CampFollowUpMediaUpdatedDate != value))
				{
					this._CampFollowUpMediaUpdatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaUpdatedBy", DbType="NVarChar(128)")]
		public string CampFollowUpMediaUpdatedBy
		{
			get
			{
				return this._CampFollowUpMediaUpdatedBy;
			}
			set
			{
				if ((this._CampFollowUpMediaUpdatedBy != value))
				{
					this._CampFollowUpMediaUpdatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaStatus", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpMediaStatus
		{
			get
			{
				return this._CampFollowUpMediaStatus;
			}
			set
			{
				if ((this._CampFollowUpMediaStatus != value))
				{
					this._CampFollowUpMediaStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaIsClosed", DbType="Bit")]
		public System.Nullable<bool> CampFollowUpMediaIsClosed
		{
			get
			{
				return this._CampFollowUpMediaIsClosed;
			}
			set
			{
				if ((this._CampFollowUpMediaIsClosed != value))
				{
					this._CampFollowUpMediaIsClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentMediaId", DbType="Int")]
		public System.Nullable<int> AttachmentMediaId
		{
			get
			{
				return this._AttachmentMediaId;
			}
			set
			{
				if ((this._AttachmentMediaId != value))
				{
					this._AttachmentMediaId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentName", DbType="NVarChar(128)")]
		public string AttachmentName
		{
			get
			{
				return this._AttachmentName;
			}
			set
			{
				if ((this._AttachmentName != value))
				{
					this._AttachmentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampFollowUpMediaDropboxLink", DbType="NVarChar(200)")]
		public string CampFollowUpMediaDropboxLink
		{
			get
			{
				return this._CampFollowUpMediaDropboxLink;
			}
			set
			{
				if ((this._CampFollowUpMediaDropboxLink != value))
				{
					this._CampFollowUpMediaDropboxLink = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlanConfigSponsorShip")]
	public partial class PlanConfigSponsorShipModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PlanConfigId;
		
		private short _SponsorShipId;
		
		private short _SponsorId;
		
		private string _PlanConfigSponsorShipAddBy;
		
		private System.Nullable<System.DateTime> _PlanConfigSponsorShipDateIn;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlanConfigIdChanging(int value);
    partial void OnPlanConfigIdChanged();
    partial void OnSponsorShipIdChanging(short value);
    partial void OnSponsorShipIdChanged();
    partial void OnSponsorIdChanging(short value);
    partial void OnSponsorIdChanged();
    partial void OnPlanConfigSponsorShipAddByChanging(string value);
    partial void OnPlanConfigSponsorShipAddByChanged();
    partial void OnPlanConfigSponsorShipDateInChanging(System.Nullable<System.DateTime> value);
    partial void OnPlanConfigSponsorShipDateInChanged();
    #endregion
		
		public PlanConfigSponsorShipModel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this.OnPlanConfigIdChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigId = value;
					this.SendPropertyChanged("PlanConfigId");
					this.OnPlanConfigIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short SponsorShipId
		{
			get
			{
				return this._SponsorShipId;
			}
			set
			{
				if ((this._SponsorShipId != value))
				{
					this.OnSponsorShipIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorShipId = value;
					this.SendPropertyChanged("SponsorShipId");
					this.OnSponsorShipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this.OnSponsorIdChanging(value);
					this.SendPropertyChanging();
					this._SponsorId = value;
					this.SendPropertyChanged("SponsorId");
					this.OnSponsorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigSponsorShipAddBy", DbType="NVarChar(128)")]
		public string PlanConfigSponsorShipAddBy
		{
			get
			{
				return this._PlanConfigSponsorShipAddBy;
			}
			set
			{
				if ((this._PlanConfigSponsorShipAddBy != value))
				{
					this.OnPlanConfigSponsorShipAddByChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigSponsorShipAddBy = value;
					this.SendPropertyChanged("PlanConfigSponsorShipAddBy");
					this.OnPlanConfigSponsorShipAddByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigSponsorShipDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PlanConfigSponsorShipDateIn
		{
			get
			{
				return this._PlanConfigSponsorShipDateIn;
			}
			set
			{
				if ((this._PlanConfigSponsorShipDateIn != value))
				{
					this.OnPlanConfigSponsorShipDateInChanging(value);
					this.SendPropertyChanging();
					this._PlanConfigSponsorShipDateIn = value;
					this.SendPropertyChanged("PlanConfigSponsorShipDateIn");
					this.OnPlanConfigSponsorShipDateInChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGetPlanConfigSponsorShipLast")]
	public partial class vwGetPlanConfigSponsorShipLastModel
	{
		
		private int _PlanConfigId;
		
		private short _SponsorShipId;
		
		private short _SponsorId;
		
		private string _PlanConfigSponsorShipAddBy;
		
		private System.Nullable<System.DateTime> _PlanConfigSponsorShipDateIn;
		
		public vwGetPlanConfigSponsorShipLastModel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigId", DbType="Int NOT NULL")]
		public int PlanConfigId
		{
			get
			{
				return this._PlanConfigId;
			}
			set
			{
				if ((this._PlanConfigId != value))
				{
					this._PlanConfigId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorShipId", DbType="SmallInt NOT NULL")]
		public short SponsorShipId
		{
			get
			{
				return this._SponsorShipId;
			}
			set
			{
				if ((this._SponsorShipId != value))
				{
					this._SponsorShipId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SponsorId", DbType="SmallInt NOT NULL")]
		public short SponsorId
		{
			get
			{
				return this._SponsorId;
			}
			set
			{
				if ((this._SponsorId != value))
				{
					this._SponsorId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigSponsorShipAddBy", DbType="NVarChar(128)")]
		public string PlanConfigSponsorShipAddBy
		{
			get
			{
				return this._PlanConfigSponsorShipAddBy;
			}
			set
			{
				if ((this._PlanConfigSponsorShipAddBy != value))
				{
					this._PlanConfigSponsorShipAddBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanConfigSponsorShipDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PlanConfigSponsorShipDateIn
		{
			get
			{
				return this._PlanConfigSponsorShipDateIn;
			}
			set
			{
				if ((this._PlanConfigSponsorShipDateIn != value))
				{
					this._PlanConfigSponsorShipDateIn = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGetAxis")]
	public partial class xzx
	{
		
		private short _AxisId;
		
		private short _AxisCategoryId;
		
		private string _AxisDescAR;
		
		private string _AxisDescEN;
		
		private System.Nullable<System.DateTime> _AxisDateIn;
		
		private System.Nullable<bool> _AxisStatus;
		
		private System.Nullable<short> _AxisOrder;
		
		public xzx()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisId", DbType="SmallInt NOT NULL")]
		public short AxisId
		{
			get
			{
				return this._AxisId;
			}
			set
			{
				if ((this._AxisId != value))
				{
					this._AxisId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisCategoryId", DbType="SmallInt NOT NULL")]
		public short AxisCategoryId
		{
			get
			{
				return this._AxisCategoryId;
			}
			set
			{
				if ((this._AxisCategoryId != value))
				{
					this._AxisCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisDescAR", DbType="NVarChar(100)")]
		public string AxisDescAR
		{
			get
			{
				return this._AxisDescAR;
			}
			set
			{
				if ((this._AxisDescAR != value))
				{
					this._AxisDescAR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisDescEN", DbType="NVarChar(100)")]
		public string AxisDescEN
		{
			get
			{
				return this._AxisDescEN;
			}
			set
			{
				if ((this._AxisDescEN != value))
				{
					this._AxisDescEN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AxisDateIn
		{
			get
			{
				return this._AxisDateIn;
			}
			set
			{
				if ((this._AxisDateIn != value))
				{
					this._AxisDateIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisStatus", DbType="Bit")]
		public System.Nullable<bool> AxisStatus
		{
			get
			{
				return this._AxisStatus;
			}
			set
			{
				if ((this._AxisStatus != value))
				{
					this._AxisStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisOrder", DbType="SmallInt")]
		public System.Nullable<short> AxisOrder
		{
			get
			{
				return this._AxisOrder;
			}
			set
			{
				if ((this._AxisOrder != value))
				{
					this._AxisOrder = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGetAxis")]
	public partial class vwGetAxisModel
	{
		
		private short _AxisId;
		
		private short _AxisCategoryId;
		
		private string _AxisDescAR;
		
		private string _AxisDescEN;
		
		private System.Nullable<System.DateTime> _AxisDateIn;
		
		private System.Nullable<bool> _AxisStatus;
		
		private System.Nullable<short> _AxisOrder;
		
		private string _AxisClassName;
		
		public vwGetAxisModel()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisId", DbType="SmallInt NOT NULL")]
		public short AxisId
		{
			get
			{
				return this._AxisId;
			}
			set
			{
				if ((this._AxisId != value))
				{
					this._AxisId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisCategoryId", DbType="SmallInt NOT NULL")]
		public short AxisCategoryId
		{
			get
			{
				return this._AxisCategoryId;
			}
			set
			{
				if ((this._AxisCategoryId != value))
				{
					this._AxisCategoryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisDescAR", DbType="NVarChar(100)")]
		public string AxisDescAR
		{
			get
			{
				return this._AxisDescAR;
			}
			set
			{
				if ((this._AxisDescAR != value))
				{
					this._AxisDescAR = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisDescEN", DbType="NVarChar(100)")]
		public string AxisDescEN
		{
			get
			{
				return this._AxisDescEN;
			}
			set
			{
				if ((this._AxisDescEN != value))
				{
					this._AxisDescEN = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisDateIn", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> AxisDateIn
		{
			get
			{
				return this._AxisDateIn;
			}
			set
			{
				if ((this._AxisDateIn != value))
				{
					this._AxisDateIn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisStatus", DbType="Bit")]
		public System.Nullable<bool> AxisStatus
		{
			get
			{
				return this._AxisStatus;
			}
			set
			{
				if ((this._AxisStatus != value))
				{
					this._AxisStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisOrder", DbType="SmallInt")]
		public System.Nullable<short> AxisOrder
		{
			get
			{
				return this._AxisOrder;
			}
			set
			{
				if ((this._AxisOrder != value))
				{
					this._AxisOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AxisClassName", DbType="NVarChar(50)")]
		public string AxisClassName
		{
			get
			{
				return this._AxisClassName;
			}
			set
			{
				if ((this._AxisClassName != value))
				{
					this._AxisClassName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
